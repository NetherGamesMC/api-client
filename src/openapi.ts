/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/v1/announcements": {
    get: operations["Get Announcements"];
  };
  "/v1/discord": {
    get: operations["Get Discord Member Count"];
  };
  "/v1/factions/{faction}": {
    get: operations["Get Faction"];
  };
  "/v1/factions": {
    get: operations["Get Factions"];
  };
  "/v1/factions/batch": {
    post: operations["Bulk Get Factions"];
  };
  "/v1/factions/{faction}/status": {
    /** @description Determine if given faction name or ID exists. */
    get: operations["Get Faction Status"];
  };
  "/v1/guilds/{guild}": {
    get: operations["Get Guild"];
  };
  "/v1/guilds": {
    get: operations["Get Guilds"];
  };
  "/v1/guilds/batch": {
    post: operations["Bulk Get Guilds"];
  };
  "/v1/guilds/{guild}/status": {
    /** @description Determine if given guild name or ID exists. */
    get: operations["Get Guild Status"];
  };
  "/v1/leaderboard": {
    get: operations["Get Leaderboard"];
  };
  "/v1/leaderboard/bulk": {
    post: operations["Bulk Get Leaderboards"];
  };
  "/v1/players/{player}": {
    get: operations["Get Player"];
  };
  "/v1/players/{player}/avatar": {
    get: operations["Get Player Avatar"];
  };
  "/v1/servers/player-count": {
    get: operations["Get Player Count"];
  };
  "/v1/players/{player}/leaderboard": {
    get: operations["Get Player Leaderboard"];
  };
  "/v1/players/leaderboard/bulk": {
    post: operations["Bulk Get Player Leaderboards"];
  };
  "/v1/players/{player}/punishments": {
    get: operations["Get Player Punishments"];
  };
  "/v1/players": {
    get: operations["Get Players"];
  };
  "/v1/players/batch": {
    post: operations["Bulk Get Players"];
  };
  "/v1/players/{player}/skin": {
    get: operations["Get Player Skin"];
  };
  "/v1/players/{player}/stats": {
    /** @description Track hourly stats for a player (lazy-loaded). Max 100 new players every 24 hours for each API key. */
    get: operations["Get Player Stats History"];
  };
  "/v1/players/stats/bulk": {
    /** @description Track hourly stats for a player (lazy-loaded). Max 100 new players every 24 hours for each API key. */
    post: operations["Bulk Get Player Stats History"];
  };
  "/v1/players/{player}/stats/{type}": {
    get: operations["Get Player Stats by Type"];
  };
  "/v1/players/{player}/status": {
    /** @description Determine if given XUID or username exists. */
    get: operations["Get Player Status"];
  };
  "/v1/search": {
    get: operations["Get Search Results"];
  };
  "/v1/search-full": {
    get: operations["Get Full-Text Search Results"];
  };
  "/v1/servers/meta": {
    get: operations["Get Server Metadata"];
  };
  "/v1/servers/settings": {
    get: operations["Get Server MOTDs"];
  };
  "/v1/servers/ping": {
    get: operations["Get Server Ping"];
  };
  "/v1/servers": {
    get: operations["Get Servers"];
  };
  "/v1/stream": {
    get: operations["Get Stream Status"];
  };
  "/v1/updates": {
    get: operations["Get Updates"];
  };
  "/v1/players/xuids": {
    post: operations["Get XUID Mapping"];
  };
}

export interface components {
  schemas: {
    XuidMappingResponse: {
      [key: string]: string | undefined;
    };
    XuidMappingInput: {
      xuids: (string)[];
    } | (string)[];
    UpdatesResponse: ({
        id: number;
        title: string;
        /** Format: date-time */
        timestamp: string;
        formattedTimestamp: string;
        content: string;
      })[];
    UpdatesQuery: {
      before?: number;
      after?: number;
      /** @default 100 */
      limit?: number;
    };
    UpdateResponse: {
      id: number;
      title: string;
      /** Format: date-time */
      timestamp: string;
      formattedTimestamp: string;
      content: string;
    };
    StreamResponse: {
      streaming: boolean;
    };
    ServerSettingsResponse: {
      motds: (string)[];
    };
    ServerResponse: {
      mm: {
        max: number;
        count: number;
        infection: {
          max: number;
          count: number;
        };
        classic: {
          max: number;
          count: number;
        };
      };
      sw: {
        max: number;
        count: number;
        doubles: {
          max: number;
          count: number;
        };
        solo: {
          max: number;
          count: number;
        };
        onevone: {
          max: number;
          count: number;
        };
        twovtwo: {
          max: number;
          count: number;
        };
      };
      ms: {
        max: number;
        count: number;
      };
      replay: {
        max: number;
        count: number;
      };
      duels: {
        max: number;
        count: number;
        doubles: {
          max: number;
          count: number;
        };
        solo: {
          max: number;
          count: number;
        };
      };
      tb: {
        max: number;
        count: number;
        doubles: {
          max: number;
          count: number;
        };
        solo: {
          max: number;
          count: number;
        };
      };
      cq: {
        max: number;
        count: number;
        mega: {
          max: number;
          count: number;
        };
      };
      creative: {
        max: number;
        count: number;
      };
      sb: {
        max: number;
        count: number;
        skyland: {
          max: number;
          count: number;
        };
        agora: {
          max: number;
          count: number;
        };
      };
      factions: {
        max: number;
        count: number;
        farlands: {
          max: number;
          count: number;
        };
        badlands: {
          max: number;
          count: number;
        };
      };
      sc: {
        max: number;
        count: number;
      };
      uhc: {
        max: number;
        count: number;
        doubles: {
          max: number;
          count: number;
        };
        solo: {
          max: number;
          count: number;
        };
      };
      lobby: {
        max: number;
        count: number;
      };
      sg: {
        max: number;
        count: number;
      };
      bw: {
        max: number;
        count: number;
        doubles: {
          max: number;
          count: number;
        };
        squads: {
          max: number;
          count: number;
        };
        solo: {
          max: number;
          count: number;
        };
      };
      setup: {
        max: number;
        count: number;
      };
    };
    ServerPingResponse: {
      /** @enum {string} */
      edition: "MCPE";
      motd: {
        raw: string;
        clean: string;
      };
      version: {
        name: string;
        protocol: number;
      };
      players: {
        online: number;
        max: number;
      };
      serverID: string;
      gameMode: string;
      gameModeID: number;
      portIPv4: number;
      portIPv6: number;
    };
    ServerPingQuery: {
      /** @default play.nethergames.org */
      ip?: string;
      /** @default 19132 */
      port?: number;
    };
    ServerMetaResponse: {
      /** @enum {string} */
      AC: "Arcade";
      /** @enum {string} */
      BB: "Build Battle";
      /** @enum {string} */
      Beta: "Beta";
      /** @enum {string} */
      BH: "Block Hunt";
      /** @enum {string} */
      BR: "Battle Royale";
      /** @enum {string} */
      BW: "Bedwars";
      /** @enum {string} */
      CQ: "Conquests";
      /** @enum {string} */
      Creative: "Creative";
      /** @enum {string} */
      Duels: "Duels";
      /** @enum {string} */
      Factions: "Factions";
      /** @enum {string} */
      Lobby: "Lobby";
      /** @enum {string} */
      MM: "Murder Mystery";
      /** @enum {string} */
      MS: "Momma Says";
      /** @enum {string} */
      Replay: "Replay";
      /** @enum {string} */
      SB: "Skyblock";
      /** @enum {string} */
      SC: "Soccer";
      /** @enum {string} */
      SG: "Survival Games";
      /** @enum {string} */
      SP: "Spleef";
      /** @enum {string} */
      SW: "Skywars";
      /** @enum {string} */
      TB: "The Bridge";
      /** @enum {string} */
      TR: "TNT Run";
      /** @enum {string} */
      UHC: "UHC";
      /** @enum {string} */
      ac: "Arcade";
      /** @enum {string} */
      bb: "Build Battle";
      /** @enum {string} */
      beta: "Beta";
      /** @enum {string} */
      bh: "Block Hunt";
      /** @enum {string} */
      br: "Battle Royale";
      /** @enum {string} */
      bw: "Bedwars";
      /** @enum {string} */
      cq: "Conquests";
      /** @enum {string} */
      creative: "Creative";
      /** @enum {string} */
      duels: "Duels";
      /** @enum {string} */
      factions: "Factions";
      /** @enum {string} */
      lobby: "Lobby";
      /** @enum {string} */
      mm: "Murder Mystery";
      /** @enum {string} */
      ms: "Momma Says";
      /** @enum {string} */
      replay: "Replay";
      /** @enum {string} */
      sb: "Skyblock";
      /** @enum {string} */
      sc: "Soccer";
      /** @enum {string} */
      sg: "Survival Games";
      /** @enum {string} */
      sp: "Spleef";
      /** @enum {string} */
      sw: "Skywars";
      /** @enum {string} */
      tb: "The Bridge";
      /** @enum {string} */
      tr: "TNT Run";
      /** @enum {string} */
      uhc: "UHC";
    };
    ServerGameStats: {
      max: number;
      count: number;
    };
    SearchResponse: {
      /** @enum {string} */
      type: "faction";
      data: {
        id: number;
        name: string;
        strength: number;
        allies: (string)[];
        leader?: Record<string, never>;
        officers: (unknown)[];
        members: (unknown)[];
      };
    } | ({
      /** @enum {string} */
      type: "guild";
      data: {
        id: number;
        name: string;
        maxSize: number;
        memberCount: number;
        motd: string;
        position?: number;
        rawTag: string;
        tag: string | null;
        /** @enum {string|null} */
        tagColor: "#000000" | "#0000aa" | "#00aa00" | "#00aaaa" | "#aa0000" | "#aa00aa" | "#ffaa00" | "#aaaaaa" | "#555555" | "#5555ff" | "#55ff55" | "#55ffff" | "#ff5555" | "#ff55ff" | "#ffff55" | "#ffffff" | "#ddd605" | null;
        xp: number;
        xpToNextLevel: number;
        level: number;
        leader?: Record<string, never>;
        officers: (unknown)[];
        members: (unknown)[];
        discordInvite: string | null;
        discordId: string | null;
      };
    }) | ({
      /** @enum {string} */
      type: "player";
      data: {
        xuid: string;
        name: string;
        /** Format: uri */
        avatar: string;
        avatarBlurhash?: string;
        /** Format: uri */
        skin: string;
        online?: boolean;
        flags: number;
        /** @enum {number} */
        dmStatus: 0 | 1 | 2;
        bio: string;
        discordId: string | null;
        discordTag: string | null;
        guild: string | null;
        ranks: ("Admin" | "Dev" | "Supervisor" | "Mod" | "Crew" | "Trainee" | "Builder" | "Designer" | "Game Designer" | "Media" | "Discord" | "Partner" | "Titan" | "Legend" | "Emerald" | "Ultra" | "Youtube" | "Tester")[];
        /** @enum {string|null} */
        tier: "Silver" | "Gold" | "Guardian" | "Eagle" | "Elite" | null;
        banned?: boolean;
        bannedUntil?: number | null;
        muted?: boolean;
        mutedUntil?: number | null;
        staff: boolean;
        titan: boolean;
        /** Format: date-time */
        titanUntil: string | null;
        /** Format: date-time */
        lastRankTimestamp: string | null;
        /** @enum {number} */
        voteStatus?: 0 | 1 | 2;
        firstJoin: string | null;
        firstJoined: number;
        lastJoin: string | null;
        lastJoined: number;
        lastQuit: number;
        lastSeen: string | null;
        lastServer: string;
        crateKeys: number;
        credits: number;
        deaths?: number;
        deathsTotal?: number;
        kdr?: number;
        kdrTotal?: number;
        kills?: number;
        killsTotal?: number;
        level: number;
        losses?: number;
        wins?: number;
        wlr?: number;
        xp: number;
        formattedLevel: string;
        levelColors: ("#000000" | "#0000aa" | "#00aa00" | "#00aaaa" | "#aa0000" | "#aa00aa" | "#ffaa00" | "#aaaaaa" | "#555555" | "#5555ff" | "#55ff55" | "#55ffff" | "#ff5555" | "#ff55ff" | "#ffff55" | "#ffffff" | "#ddd605")[];
        /** @enum {string} */
        levelFormat: "§k" | "§l" | "§o" | "§r";
        rankColors: (string)[];
        skinVisibility: boolean;
        tierColor: string | null;
        youtubeChannelUrl: string | null;
        killsUntilNextKdr?: number;
        winsUntilNextWlr?: number;
        xpToNextLevel: number;
        discoveredTokens: (string)[];
        discoveredZones: (string)[];
        factionData?: ({
          tags: number;
          registerDate: string;
          coins: number;
          kills: number;
          bounty: number;
          faction: {
            id: number;
            name: string;
            strength: number;
            allies: (string)[];
            leader?: Record<string, never>;
            officers: (unknown)[];
            members: (unknown)[];
          } | null;
        }) | null;
        guildData?: ({
          id: number;
          name: string;
          maxSize: number;
          memberCount: number;
          motd: string;
          position?: number;
          rawTag: string;
          tag: string | null;
          /** @enum {string|null} */
          tagColor: "#000000" | "#0000aa" | "#00aa00" | "#00aaaa" | "#aa0000" | "#aa00aa" | "#ffaa00" | "#aaaaaa" | "#555555" | "#5555ff" | "#55ff55" | "#55ffff" | "#ff5555" | "#ff55ff" | "#ffff55" | "#ffffff" | "#ddd605" | null;
          xp: number;
          xpToNextLevel: number;
          level: number;
          leader?: Record<string, never>;
          officers: (unknown)[];
          members: (unknown)[];
          discordInvite: string | null;
          discordId: string | null;
        }) | null;
        lastServerParsed: {
          region: string | null;
          serverName: string | null;
          serverNameLong: string | null;
          serverType: string | null;
          pretty: string;
        };
        punishmentsNew?: ({
            id: string;
            /** @description The punishment `reasonName` and `reasonCategory` joined together. */
            reason: string;
            reasonName: string;
            reasonCategory: string;
            /** @enum {string} */
            type: "BAN" | "MUTE";
            /** @description If true, the punishment does not expire. */
            permanent: boolean;
            /** @description For migration punishments, this value is 0. */
            issuedAt: number;
            /** @description If `permanent` is true, this value is -1. */
            validUntil: number;
            /** @description Whether this punishment is currently active. */
            active: boolean;
            /** @description The XUIDs affected by this punishment. */
            affectedXuids: (string)[];
            /** @description The corresponding player names to `affectedXuids`. */
            affectedPlayers: (string)[];
            alt: boolean;
          })[];
        skinData?: {
          skin: boolean;
          /** @enum {string} */
          skinType: "steve" | "alex";
          skinVisibility: boolean;
          base64: string;
          raw: string | null;
        };
        winsData?: {
          /** @default 0 */
          BH?: number;
          /** @default 0 */
          BW?: number;
          /** @default 0 */
          CQ?: number;
          /** @default 0 */
          Duels?: number;
          /** @default 0 */
          MM?: number;
          /** @default 0 */
          MS?: number;
          /** @default 0 */
          SC?: number;
          /** @default 0 */
          SG?: number;
          /** @default 0 */
          SW?: number;
          /** @default 0 */
          TB?: number;
          /** @default 0 */
          TR?: number;
          /** @default 0 */
          UHC?: number;
        };
        extra?: {
          /** @default 0 */
          bhWins?: number;
          /** @default 0 */
          bwBedsBroken?: number;
          /** @default 0 */
          bwBestStreak?: number;
          /** @default 0 */
          bwDeaths?: number;
          /** @default 0 */
          bwDiamondsCollected?: number;
          /** @default 0 */
          bwDoublesBedsBroken?: number;
          /** @default 0 */
          bwDoublesDeaths?: number;
          /** @default 0 */
          bwDoublesFinalKills?: number;
          /** @default 0 */
          bwDoublesKills?: number;
          /** @default 0 */
          bwDoublesWins?: number;
          /** @default 0 */
          bwEmeraldsCollected?: number;
          /** @default 0 */
          bwFinalKills?: number;
          /** @default 0 */
          bwGoldCollected?: number;
          /** @default 0 */
          bwIronCollected?: number;
          /** @default 0 */
          bwKills?: number;
          /** @default 0 */
          bwSoloBedsBroken?: number;
          /** @default 0 */
          bwSoloDeaths?: number;
          /** @default 0 */
          bwSoloFinalKills?: number;
          /** @default 0 */
          bwSoloKills?: number;
          /** @default 0 */
          bwSoloWins?: number;
          /** @default 0 */
          bwSquadsBedsBroken?: number;
          /** @default 0 */
          bwSquadsDeaths?: number;
          /** @default 0 */
          bwSquadsFinalKills?: number;
          /** @default 0 */
          bwSquadsKills?: number;
          /** @default 0 */
          bwSquadsWins?: number;
          /** @default 0 */
          bwStreak?: number;
          /** @default 0 */
          bwTriosBedsBroken?: number;
          /** @default 0 */
          bwTriosDeaths?: number;
          /** @default 0 */
          bwTriosFinalKills?: number;
          /** @default 0 */
          bwTriosKills?: number;
          /** @default 0 */
          bwTriosWins?: number;
          /** @default 0 */
          bwWins?: number;
          /** @default 0 */
          cqDeaths?: number;
          /** @default 0 */
          cqDiamondsCollected?: number;
          /** @default 0 */
          cqEmeraldsCollected?: number;
          /** @default 0 */
          cqFlagsCaptured?: number;
          /** @default 0 */
          cqFlagsCollected?: number;
          /** @default 0 */
          cqFlagsReturned?: number;
          /** @default 0 */
          cqGoldCollected?: number;
          /** @default 0 */
          cqIronCollected?: number;
          /** @default 0 */
          cqKills?: number;
          /** @default 0 */
          cqWins?: number;
          /** @default 0 */
          duelsArrowsShot?: number;
          /** @default 0 */
          duelsBestStreak?: number;
          /** @default 0 */
          duelsDeaths?: number;
          /** @default 0 */
          duelsKills?: number;
          /** @default 0 */
          duelsLosses?: number;
          /** @default 0 */
          duelsMeleeHits?: number;
          /** @default 0 */
          duelsStreak?: number;
          /** @default 0 */
          duelsWins?: number;
          /** @default 0 */
          gxp?: number;
          /** @default 0 */
          mmBowKills?: number;
          /** @default 0 */
          mmClassicDeaths?: number;
          /** @default 0 */
          mmClassicKills?: number;
          /** @default 0 */
          mmClassicWins?: number;
          /** @default 0 */
          mmDeaths?: number;
          /** @default 0 */
          mmInfectionDeaths?: number;
          /** @default 0 */
          mmInfectionKills?: number;
          /** @default 0 */
          mmInfectionWins?: number;
          /** @default 0 */
          mmKills?: number;
          /** @default 0 */
          mmKnifeKills?: number;
          /** @default 0 */
          mmThrowKnifeKills?: number;
          /** @default 0 */
          mmWins?: number;
          /** @default 0 */
          msFails?: number;
          /** @default 0 */
          msSuccesses?: number;
          /** @default 0 */
          msWins?: number;
          /** @default 0 */
          onlineTime?: number;
          /** @default 0 */
          scGoals?: number;
          /** @default 0 */
          scWins?: number;
          /** @default 0 */
          sgDeaths?: number;
          /** @default 0 */
          sgKills?: number;
          /** @default 0 */
          sgWins?: number;
          /** @default 0 */
          swArrowsShot?: number;
          /** @default 0 */
          swBlocksBroken?: number;
          /** @default 0 */
          swBlocksPlaced?: number;
          /** @default 0 */
          swCoins?: number;
          /** @default 0 */
          swDeaths?: number;
          /** @default 0 */
          swDoublesDeaths?: number;
          /** @default 0 */
          swDoublesInsaneDeaths?: number;
          /** @default 0 */
          swDoublesInsaneKills?: number;
          /** @default 0 */
          swDoublesKills?: number;
          /** @default 0 */
          swDoublesLosses?: number;
          /** @default 0 */
          swDoublesNormalDeaths?: number;
          /** @default 0 */
          swDoublesNormalKills?: number;
          /** @default 0 */
          swDoublesWins?: number;
          /** @default 0 */
          swEggsThrown?: number;
          /** @default 0 */
          swEpearlsThrown?: number;
          /** @default 0 */
          swKills?: number;
          /** @default 0 */
          swLosses?: number;
          /** @default 0 */
          swSoloDeaths?: number;
          /** @default 0 */
          swSoloInsaneDeaths?: number;
          /** @default 0 */
          swSoloInsaneKills?: number;
          /** @default 0 */
          swSoloKills?: number;
          /** @default 0 */
          swSoloLosses?: number;
          /** @default 0 */
          swSoloNormalDeaths?: number;
          /** @default 0 */
          swSoloNormalKills?: number;
          /** @default 0 */
          swSoloWins?: number;
          /** @default 0 */
          swWins?: number;
          /** @default 0 */
          tbArrowsShot?: number;
          /** @default 0 */
          tbBestStreak?: number;
          /** @default 0 */
          tbDeaths?: number;
          /** @default 0 */
          tbGoals?: number;
          /** @default 0 */
          tbKills?: number;
          /** @default 0 */
          tbLosses?: number;
          /** @default 0 */
          tbMeleeHits?: number;
          /** @default 0 */
          tbStreak?: number;
          /** @default 0 */
          tbWins?: number;
          /** @default 0 */
          trBestStreak?: number;
          /** @default 0 */
          trBlocksDropped?: number;
          /** @default 0 */
          trLosses?: number;
          /** @default 0 */
          trStreak?: number;
          /** @default 0 */
          trTimeRecord?: number;
          /** @default 0 */
          trWins?: number;
          /** @default 0 */
          uhcDeaths?: number;
          /** @default 0 */
          uhcDiamondMined?: number;
          /** @default 0 */
          uhcGoldMined?: number;
          /** @default 0 */
          uhcIronMined?: number;
          /** @default 0 */
          uhcKills?: number;
          /** @default 0 */
          uhcLapisMined?: number;
          /** @default 0 */
          uhcWins?: number;
        };
        extraNested?: {
          bh: {
            wins: number;
          };
          bw: {
            kills: number;
            deaths: number;
            solo: {
              kills: number;
              deaths: number;
              beds: {
                broken: number;
              };
              final: {
                kills: number;
              };
              wins: number;
            };
            doubles: {
              kills: number;
              deaths: number;
              beds: {
                broken: number;
              };
              final: {
                kills: number;
              };
              wins: number;
            };
            trios: {
              kills: number;
              deaths: number;
              beds: {
                broken: number;
              };
              final: {
                kills: number;
              };
              wins: number;
            };
            squads: {
              kills: number;
              deaths: number;
              beds: {
                broken: number;
              };
              final: {
                kills: number;
              };
              wins: number;
            };
            beds: {
              broken: number;
            };
            diamonds: {
              collected: number;
            };
            emeralds: {
              collected: number;
            };
            gold: {
              collected: number;
            };
            iron: {
              collected: number;
            };
            final: {
              kills: number;
            };
            streak: number;
            best: {
              streak: number;
            };
            wins: number;
          };
          cq: {
            kills: number;
            deaths: number;
            wins: number;
            flags: {
              collected: number;
              captured: number;
              returned: number;
            };
            diamonds: {
              collected: number;
            };
            emeralds: {
              collected: number;
            };
            gold: {
              collected: number;
            };
            iron: {
              collected: number;
            };
          };
          duels: {
            kills: number;
            deaths: number;
            arrows: {
              shot: number;
            };
            melee: {
              hits: number;
            };
            streak: number;
            best: {
              streak: number;
            };
            wins: number;
            losses: number;
          };
          mm: {
            kills: number;
            deaths: number;
            classic: {
              kills: number;
              deaths: number;
              wins: number;
            };
            infection: {
              kills: number;
              deaths: number;
              wins: number;
            };
            bow: {
              kills: number;
            };
            knife: {
              kills: number;
            };
            throw: {
              knife: {
                kills: number;
              };
            };
            wins: number;
          };
          ms: {
            successes: number;
            fails: number;
            wins: number;
          };
          sc: {
            wins: number;
            goals: number;
          };
          sg: {
            kills: number;
            deaths: number;
            wins: number;
          };
          sw: {
            coins: number;
            kills: number;
            deaths: number;
            solo: {
              kills: number;
              deaths: number;
              normal: {
                kills: number;
                deaths: number;
              };
              insane: {
                kills: number;
                deaths: number;
              };
              wins: number;
              losses: number;
            };
            doubles: {
              kills: number;
              deaths: number;
              normal: {
                kills: number;
                deaths: number;
              };
              insane: {
                kills: number;
                deaths: number;
              };
              wins: number;
              losses: number;
            };
            blocks: {
              broken: number;
              placed: number;
            };
            arrows: {
              shot: number;
            };
            eggs: {
              thrown: number;
            };
            epearls: {
              thrown: number;
            };
            wins: number;
            losses: number;
          };
          tb: {
            kills: number;
            deaths: number;
            arrows: {
              shot: number;
            };
            melee: {
              hits: number;
            };
            goals: number;
            streak: number;
            best: {
              streak: number;
            };
            wins: number;
            losses: number;
          };
          tr: {
            wins: number;
            losses: number;
            streak: number;
            best: {
              streak: number;
            };
            blocks: {
              dropped: number;
            };
            time: {
              record: number;
            };
          };
          uhc: {
            kills: number;
            deaths: number;
            wins: number;
            iron: {
              mined: number;
            };
            gold: {
              mined: number;
            };
            lapis: {
              mined: number;
            };
            diamond: {
              mined: number;
            };
          };
          online: {
            time: number;
          };
          gxp: number;
        };
        leaderboard: boolean;
        /** @deprecated use `credits` instead. */
        statusCredits: number;
      };
    });
    SearchQuery: {
      name: string;
    };
    SearchFullTextResponse: (({
        /** @enum {string} */
        type: "faction";
        name: string;
        data?: {
          id: number;
          name: string;
          strength: number;
          allies: (string)[];
          leader?: Record<string, never>;
          officers: (unknown)[];
          members: (unknown)[];
        } | null;
      })[]) | (({
        /** @enum {string} */
        type: "guild";
        name: string;
        data?: ({
          id: number;
          name: string;
          maxSize: number;
          memberCount: number;
          motd: string;
          position?: number;
          rawTag: string;
          tag: string | null;
          /** @enum {string|null} */
          tagColor: "#000000" | "#0000aa" | "#00aa00" | "#00aaaa" | "#aa0000" | "#aa00aa" | "#ffaa00" | "#aaaaaa" | "#555555" | "#5555ff" | "#55ff55" | "#55ffff" | "#ff5555" | "#ff55ff" | "#ffff55" | "#ffffff" | "#ddd605" | null;
          xp: number;
          xpToNextLevel: number;
          level: number;
          leader?: Record<string, never>;
          officers: (unknown)[];
          members: (unknown)[];
          discordInvite: string | null;
          discordId: string | null;
        }) | null;
      })[]) | (({
        /** @enum {string} */
        type: "player";
        name: string;
        rank: string;
        data?: ({
          xuid: string;
          name: string;
          /** Format: uri */
          avatar: string;
          avatarBlurhash?: string;
          /** Format: uri */
          skin: string;
          online?: boolean;
          flags: number;
          /** @enum {number} */
          dmStatus: 0 | 1 | 2;
          bio: string;
          discordId: string | null;
          discordTag: string | null;
          guild: string | null;
          ranks: ("Admin" | "Dev" | "Supervisor" | "Mod" | "Crew" | "Trainee" | "Builder" | "Designer" | "Game Designer" | "Media" | "Discord" | "Partner" | "Titan" | "Legend" | "Emerald" | "Ultra" | "Youtube" | "Tester")[];
          /** @enum {string|null} */
          tier: "Silver" | "Gold" | "Guardian" | "Eagle" | "Elite" | null;
          banned?: boolean;
          bannedUntil?: number | null;
          muted?: boolean;
          mutedUntil?: number | null;
          staff: boolean;
          titan: boolean;
          /** Format: date-time */
          titanUntil: string | null;
          /** Format: date-time */
          lastRankTimestamp: string | null;
          /** @enum {number} */
          voteStatus?: 0 | 1 | 2;
          firstJoin: string | null;
          firstJoined: number;
          lastJoin: string | null;
          lastJoined: number;
          lastQuit: number;
          lastSeen: string | null;
          lastServer: string;
          crateKeys: number;
          credits: number;
          deaths?: number;
          deathsTotal?: number;
          kdr?: number;
          kdrTotal?: number;
          kills?: number;
          killsTotal?: number;
          level: number;
          losses?: number;
          wins?: number;
          wlr?: number;
          xp: number;
          formattedLevel: string;
          levelColors: ("#000000" | "#0000aa" | "#00aa00" | "#00aaaa" | "#aa0000" | "#aa00aa" | "#ffaa00" | "#aaaaaa" | "#555555" | "#5555ff" | "#55ff55" | "#55ffff" | "#ff5555" | "#ff55ff" | "#ffff55" | "#ffffff" | "#ddd605")[];
          /** @enum {string} */
          levelFormat: "§k" | "§l" | "§o" | "§r";
          rankColors: (string)[];
          skinVisibility: boolean;
          tierColor: string | null;
          youtubeChannelUrl: string | null;
          killsUntilNextKdr?: number;
          winsUntilNextWlr?: number;
          xpToNextLevel: number;
          discoveredTokens: (string)[];
          discoveredZones: (string)[];
          factionData?: ({
            tags: number;
            registerDate: string;
            coins: number;
            kills: number;
            bounty: number;
            faction: {
              id: number;
              name: string;
              strength: number;
              allies: (string)[];
              leader?: Record<string, never>;
              officers: (unknown)[];
              members: (unknown)[];
            } | null;
          }) | null;
          guildData?: ({
            id: number;
            name: string;
            maxSize: number;
            memberCount: number;
            motd: string;
            position?: number;
            rawTag: string;
            tag: string | null;
            /** @enum {string|null} */
            tagColor: "#000000" | "#0000aa" | "#00aa00" | "#00aaaa" | "#aa0000" | "#aa00aa" | "#ffaa00" | "#aaaaaa" | "#555555" | "#5555ff" | "#55ff55" | "#55ffff" | "#ff5555" | "#ff55ff" | "#ffff55" | "#ffffff" | "#ddd605" | null;
            xp: number;
            xpToNextLevel: number;
            level: number;
            leader?: Record<string, never>;
            officers: (unknown)[];
            members: (unknown)[];
            discordInvite: string | null;
            discordId: string | null;
          }) | null;
          lastServerParsed: {
            region: string | null;
            serverName: string | null;
            serverNameLong: string | null;
            serverType: string | null;
            pretty: string;
          };
          punishmentsNew?: ({
              id: string;
              /** @description The punishment `reasonName` and `reasonCategory` joined together. */
              reason: string;
              reasonName: string;
              reasonCategory: string;
              /** @enum {string} */
              type: "BAN" | "MUTE";
              /** @description If true, the punishment does not expire. */
              permanent: boolean;
              /** @description For migration punishments, this value is 0. */
              issuedAt: number;
              /** @description If `permanent` is true, this value is -1. */
              validUntil: number;
              /** @description Whether this punishment is currently active. */
              active: boolean;
              /** @description The XUIDs affected by this punishment. */
              affectedXuids: (string)[];
              /** @description The corresponding player names to `affectedXuids`. */
              affectedPlayers: (string)[];
              alt: boolean;
            })[];
          skinData?: {
            skin: boolean;
            /** @enum {string} */
            skinType: "steve" | "alex";
            skinVisibility: boolean;
            base64: string;
            raw: string | null;
          };
          winsData?: {
            /** @default 0 */
            BH?: number;
            /** @default 0 */
            BW?: number;
            /** @default 0 */
            CQ?: number;
            /** @default 0 */
            Duels?: number;
            /** @default 0 */
            MM?: number;
            /** @default 0 */
            MS?: number;
            /** @default 0 */
            SC?: number;
            /** @default 0 */
            SG?: number;
            /** @default 0 */
            SW?: number;
            /** @default 0 */
            TB?: number;
            /** @default 0 */
            TR?: number;
            /** @default 0 */
            UHC?: number;
          };
          extra?: {
            /** @default 0 */
            bhWins?: number;
            /** @default 0 */
            bwBedsBroken?: number;
            /** @default 0 */
            bwBestStreak?: number;
            /** @default 0 */
            bwDeaths?: number;
            /** @default 0 */
            bwDiamondsCollected?: number;
            /** @default 0 */
            bwDoublesBedsBroken?: number;
            /** @default 0 */
            bwDoublesDeaths?: number;
            /** @default 0 */
            bwDoublesFinalKills?: number;
            /** @default 0 */
            bwDoublesKills?: number;
            /** @default 0 */
            bwDoublesWins?: number;
            /** @default 0 */
            bwEmeraldsCollected?: number;
            /** @default 0 */
            bwFinalKills?: number;
            /** @default 0 */
            bwGoldCollected?: number;
            /** @default 0 */
            bwIronCollected?: number;
            /** @default 0 */
            bwKills?: number;
            /** @default 0 */
            bwSoloBedsBroken?: number;
            /** @default 0 */
            bwSoloDeaths?: number;
            /** @default 0 */
            bwSoloFinalKills?: number;
            /** @default 0 */
            bwSoloKills?: number;
            /** @default 0 */
            bwSoloWins?: number;
            /** @default 0 */
            bwSquadsBedsBroken?: number;
            /** @default 0 */
            bwSquadsDeaths?: number;
            /** @default 0 */
            bwSquadsFinalKills?: number;
            /** @default 0 */
            bwSquadsKills?: number;
            /** @default 0 */
            bwSquadsWins?: number;
            /** @default 0 */
            bwStreak?: number;
            /** @default 0 */
            bwTriosBedsBroken?: number;
            /** @default 0 */
            bwTriosDeaths?: number;
            /** @default 0 */
            bwTriosFinalKills?: number;
            /** @default 0 */
            bwTriosKills?: number;
            /** @default 0 */
            bwTriosWins?: number;
            /** @default 0 */
            bwWins?: number;
            /** @default 0 */
            cqDeaths?: number;
            /** @default 0 */
            cqDiamondsCollected?: number;
            /** @default 0 */
            cqEmeraldsCollected?: number;
            /** @default 0 */
            cqFlagsCaptured?: number;
            /** @default 0 */
            cqFlagsCollected?: number;
            /** @default 0 */
            cqFlagsReturned?: number;
            /** @default 0 */
            cqGoldCollected?: number;
            /** @default 0 */
            cqIronCollected?: number;
            /** @default 0 */
            cqKills?: number;
            /** @default 0 */
            cqWins?: number;
            /** @default 0 */
            duelsArrowsShot?: number;
            /** @default 0 */
            duelsBestStreak?: number;
            /** @default 0 */
            duelsDeaths?: number;
            /** @default 0 */
            duelsKills?: number;
            /** @default 0 */
            duelsLosses?: number;
            /** @default 0 */
            duelsMeleeHits?: number;
            /** @default 0 */
            duelsStreak?: number;
            /** @default 0 */
            duelsWins?: number;
            /** @default 0 */
            gxp?: number;
            /** @default 0 */
            mmBowKills?: number;
            /** @default 0 */
            mmClassicDeaths?: number;
            /** @default 0 */
            mmClassicKills?: number;
            /** @default 0 */
            mmClassicWins?: number;
            /** @default 0 */
            mmDeaths?: number;
            /** @default 0 */
            mmInfectionDeaths?: number;
            /** @default 0 */
            mmInfectionKills?: number;
            /** @default 0 */
            mmInfectionWins?: number;
            /** @default 0 */
            mmKills?: number;
            /** @default 0 */
            mmKnifeKills?: number;
            /** @default 0 */
            mmThrowKnifeKills?: number;
            /** @default 0 */
            mmWins?: number;
            /** @default 0 */
            msFails?: number;
            /** @default 0 */
            msSuccesses?: number;
            /** @default 0 */
            msWins?: number;
            /** @default 0 */
            onlineTime?: number;
            /** @default 0 */
            scGoals?: number;
            /** @default 0 */
            scWins?: number;
            /** @default 0 */
            sgDeaths?: number;
            /** @default 0 */
            sgKills?: number;
            /** @default 0 */
            sgWins?: number;
            /** @default 0 */
            swArrowsShot?: number;
            /** @default 0 */
            swBlocksBroken?: number;
            /** @default 0 */
            swBlocksPlaced?: number;
            /** @default 0 */
            swCoins?: number;
            /** @default 0 */
            swDeaths?: number;
            /** @default 0 */
            swDoublesDeaths?: number;
            /** @default 0 */
            swDoublesInsaneDeaths?: number;
            /** @default 0 */
            swDoublesInsaneKills?: number;
            /** @default 0 */
            swDoublesKills?: number;
            /** @default 0 */
            swDoublesLosses?: number;
            /** @default 0 */
            swDoublesNormalDeaths?: number;
            /** @default 0 */
            swDoublesNormalKills?: number;
            /** @default 0 */
            swDoublesWins?: number;
            /** @default 0 */
            swEggsThrown?: number;
            /** @default 0 */
            swEpearlsThrown?: number;
            /** @default 0 */
            swKills?: number;
            /** @default 0 */
            swLosses?: number;
            /** @default 0 */
            swSoloDeaths?: number;
            /** @default 0 */
            swSoloInsaneDeaths?: number;
            /** @default 0 */
            swSoloInsaneKills?: number;
            /** @default 0 */
            swSoloKills?: number;
            /** @default 0 */
            swSoloLosses?: number;
            /** @default 0 */
            swSoloNormalDeaths?: number;
            /** @default 0 */
            swSoloNormalKills?: number;
            /** @default 0 */
            swSoloWins?: number;
            /** @default 0 */
            swWins?: number;
            /** @default 0 */
            tbArrowsShot?: number;
            /** @default 0 */
            tbBestStreak?: number;
            /** @default 0 */
            tbDeaths?: number;
            /** @default 0 */
            tbGoals?: number;
            /** @default 0 */
            tbKills?: number;
            /** @default 0 */
            tbLosses?: number;
            /** @default 0 */
            tbMeleeHits?: number;
            /** @default 0 */
            tbStreak?: number;
            /** @default 0 */
            tbWins?: number;
            /** @default 0 */
            trBestStreak?: number;
            /** @default 0 */
            trBlocksDropped?: number;
            /** @default 0 */
            trLosses?: number;
            /** @default 0 */
            trStreak?: number;
            /** @default 0 */
            trTimeRecord?: number;
            /** @default 0 */
            trWins?: number;
            /** @default 0 */
            uhcDeaths?: number;
            /** @default 0 */
            uhcDiamondMined?: number;
            /** @default 0 */
            uhcGoldMined?: number;
            /** @default 0 */
            uhcIronMined?: number;
            /** @default 0 */
            uhcKills?: number;
            /** @default 0 */
            uhcLapisMined?: number;
            /** @default 0 */
            uhcWins?: number;
          };
          extraNested?: {
            bh: {
              wins: number;
            };
            bw: {
              kills: number;
              deaths: number;
              solo: {
                kills: number;
                deaths: number;
                beds: {
                  broken: number;
                };
                final: {
                  kills: number;
                };
                wins: number;
              };
              doubles: {
                kills: number;
                deaths: number;
                beds: {
                  broken: number;
                };
                final: {
                  kills: number;
                };
                wins: number;
              };
              trios: {
                kills: number;
                deaths: number;
                beds: {
                  broken: number;
                };
                final: {
                  kills: number;
                };
                wins: number;
              };
              squads: {
                kills: number;
                deaths: number;
                beds: {
                  broken: number;
                };
                final: {
                  kills: number;
                };
                wins: number;
              };
              beds: {
                broken: number;
              };
              diamonds: {
                collected: number;
              };
              emeralds: {
                collected: number;
              };
              gold: {
                collected: number;
              };
              iron: {
                collected: number;
              };
              final: {
                kills: number;
              };
              streak: number;
              best: {
                streak: number;
              };
              wins: number;
            };
            cq: {
              kills: number;
              deaths: number;
              wins: number;
              flags: {
                collected: number;
                captured: number;
                returned: number;
              };
              diamonds: {
                collected: number;
              };
              emeralds: {
                collected: number;
              };
              gold: {
                collected: number;
              };
              iron: {
                collected: number;
              };
            };
            duels: {
              kills: number;
              deaths: number;
              arrows: {
                shot: number;
              };
              melee: {
                hits: number;
              };
              streak: number;
              best: {
                streak: number;
              };
              wins: number;
              losses: number;
            };
            mm: {
              kills: number;
              deaths: number;
              classic: {
                kills: number;
                deaths: number;
                wins: number;
              };
              infection: {
                kills: number;
                deaths: number;
                wins: number;
              };
              bow: {
                kills: number;
              };
              knife: {
                kills: number;
              };
              throw: {
                knife: {
                  kills: number;
                };
              };
              wins: number;
            };
            ms: {
              successes: number;
              fails: number;
              wins: number;
            };
            sc: {
              wins: number;
              goals: number;
            };
            sg: {
              kills: number;
              deaths: number;
              wins: number;
            };
            sw: {
              coins: number;
              kills: number;
              deaths: number;
              solo: {
                kills: number;
                deaths: number;
                normal: {
                  kills: number;
                  deaths: number;
                };
                insane: {
                  kills: number;
                  deaths: number;
                };
                wins: number;
                losses: number;
              };
              doubles: {
                kills: number;
                deaths: number;
                normal: {
                  kills: number;
                  deaths: number;
                };
                insane: {
                  kills: number;
                  deaths: number;
                };
                wins: number;
                losses: number;
              };
              blocks: {
                broken: number;
                placed: number;
              };
              arrows: {
                shot: number;
              };
              eggs: {
                thrown: number;
              };
              epearls: {
                thrown: number;
              };
              wins: number;
              losses: number;
            };
            tb: {
              kills: number;
              deaths: number;
              arrows: {
                shot: number;
              };
              melee: {
                hits: number;
              };
              goals: number;
              streak: number;
              best: {
                streak: number;
              };
              wins: number;
              losses: number;
            };
            tr: {
              wins: number;
              losses: number;
              streak: number;
              best: {
                streak: number;
              };
              blocks: {
                dropped: number;
              };
              time: {
                record: number;
              };
            };
            uhc: {
              kills: number;
              deaths: number;
              wins: number;
              iron: {
                mined: number;
              };
              gold: {
                mined: number;
              };
              lapis: {
                mined: number;
              };
              diamond: {
                mined: number;
              };
            };
            online: {
              time: number;
            };
            gxp: number;
          };
          leaderboard: boolean;
          /** @deprecated use `credits` instead. */
          statusCredits: number;
        }) | null;
      })[]);
    SearchFullTextQuery: {
      /** @default false */
      expand?: boolean;
      /** @default true */
      withFactionData?: boolean;
      /** @default false */
      withGuildData?: boolean;
      /** @default true */
      withOnline?: boolean;
      /** @default true */
      withPunishments?: boolean;
      /** @default false */
      withSkinData?: boolean;
      /** @default true */
      withStats?: boolean;
      /** @default true */
      withVoteStatus?: boolean;
      /** @default false */
      withAvatarBlurhash?: boolean;
      /**
       * @default global
       * @enum {string}
       */
      period?: "global" | "daily" | "weekly" | "biweekly" | "monthly" | "yearly";
      /** @default 100 */
      limit?: number;
      query: string;
      /** @enum {string} */
      type?: "faction" | "guild" | "player";
    };
    RelayPaginationResponse: {
      nodes: (unknown)[];
      edges: ({
          cursor: string;
          node?: Record<string, never>;
        })[];
      pageInfo: {
        hasNextPage: boolean;
        hasPreviousPage: boolean;
        startCursor?: string;
        endCursor?: string;
      };
      totalCount: number;
    };
    RelayPaginationQueryPlayer: {
      /** @default false */
      withStats?: boolean;
      first?: number;
      after?: string;
      last?: number;
      before?: string;
    };
    RelayPaginationQueryGuild: {
      /** @default false */
      expand?: boolean;
      /** @default false */
      withStats?: boolean;
      first?: number;
      after?: string;
      last?: number;
      before?: string;
    };
    RelayPaginationQueryFaction: {
      /** @default false */
      expand?: boolean;
      /** @default false */
      withStats?: boolean;
      first?: number;
      after?: string;
      last?: number;
      before?: string;
    };
    ProductPlansResponse: ({
        id: string;
        productId: string;
        name: string;
        description: string;
        /** @enum {number} */
        type: 1 | 2;
        flags: number;
        /** @enum {number|null} */
        interval: 1 | 2 | null;
        intervalCount: number | null;
        unitAmount: number;
      })[];
    ProductPlanResponse: {
      id: string;
      productId: string;
      name: string;
      description: string;
      /** @enum {number} */
      type: 1 | 2;
      flags: number;
      /** @enum {number|null} */
      interval: 1 | 2 | null;
      intervalCount: number | null;
      unitAmount: number;
    };
    PlayerWinsData: {
      /** @default 0 */
      BH?: number;
      /** @default 0 */
      BW?: number;
      /** @default 0 */
      CQ?: number;
      /** @default 0 */
      Duels?: number;
      /** @default 0 */
      MM?: number;
      /** @default 0 */
      MS?: number;
      /** @default 0 */
      SC?: number;
      /** @default 0 */
      SG?: number;
      /** @default 0 */
      SW?: number;
      /** @default 0 */
      TB?: number;
      /** @default 0 */
      TR?: number;
      /** @default 0 */
      UHC?: number;
    };
    PlayerStatusResponse: {
      status: boolean;
    };
    PlayerStatsResponseBulk: {
      [key: string]: ({
        [key: string]: {
          credits: number;
          deaths: number;
          kills: number;
          losses: number;
          xp: number;
          wins: {
            total: number;
            bh: number;
            cq: number;
            duels: number;
            ms: number;
            sc: number;
            sg: number;
            tb: number;
            tr: number;
            uhc: number;
            bw: number;
            mm: number;
            sw: number;
          };
        } | undefined;
      }) | undefined;
    };
    PlayerStatsResponse: {
      [key: string]: {
        credits: number;
        deaths: number;
        kills: number;
        losses: number;
        xp: number;
        wins: {
          total: number;
          bh: number;
          cq: number;
          duels: number;
          ms: number;
          sc: number;
          sg: number;
          tb: number;
          tr: number;
          uhc: number;
          bw: number;
          mm: number;
          sw: number;
        };
      } | undefined;
    };
    PlayerStatsQuery: {
      /**
       * @default 1
       * @enum {number}
       */
      version?: 1;
      periodStart: number;
      /** @default -1 */
      periodEnd?: number | -1;
      hour?: number;
    };
    PlayerStatsInput: {
      /**
       * @default 1
       * @enum {number}
       */
      version?: 1;
      periodStart: number;
      /** @default -1 */
      periodEnd?: number | -1;
      hour?: number;
      names: (string)[];
    };
    PlayerStatsByTypeResponse: {
      xuid: string;
      name: string;
      stats: {
        kills: number;
        killsTotal: number;
        deaths: number;
        deathsTotal: number;
        kdr: number;
        kdrTotal: number;
        wins: number;
        winsData: {
          /** @default 0 */
          BH?: number;
          /** @default 0 */
          BW?: number;
          /** @default 0 */
          CQ?: number;
          /** @default 0 */
          Duels?: number;
          /** @default 0 */
          MM?: number;
          /** @default 0 */
          MS?: number;
          /** @default 0 */
          SC?: number;
          /** @default 0 */
          SG?: number;
          /** @default 0 */
          SW?: number;
          /** @default 0 */
          TB?: number;
          /** @default 0 */
          TR?: number;
          /** @default 0 */
          UHC?: number;
        };
        losses: number;
        wlr: number;
        extra: {
          /** @default 0 */
          bhWins?: number;
          /** @default 0 */
          bwBedsBroken?: number;
          /** @default 0 */
          bwBestStreak?: number;
          /** @default 0 */
          bwDeaths?: number;
          /** @default 0 */
          bwDiamondsCollected?: number;
          /** @default 0 */
          bwDoublesBedsBroken?: number;
          /** @default 0 */
          bwDoublesDeaths?: number;
          /** @default 0 */
          bwDoublesFinalKills?: number;
          /** @default 0 */
          bwDoublesKills?: number;
          /** @default 0 */
          bwDoublesWins?: number;
          /** @default 0 */
          bwEmeraldsCollected?: number;
          /** @default 0 */
          bwFinalKills?: number;
          /** @default 0 */
          bwGoldCollected?: number;
          /** @default 0 */
          bwIronCollected?: number;
          /** @default 0 */
          bwKills?: number;
          /** @default 0 */
          bwSoloBedsBroken?: number;
          /** @default 0 */
          bwSoloDeaths?: number;
          /** @default 0 */
          bwSoloFinalKills?: number;
          /** @default 0 */
          bwSoloKills?: number;
          /** @default 0 */
          bwSoloWins?: number;
          /** @default 0 */
          bwSquadsBedsBroken?: number;
          /** @default 0 */
          bwSquadsDeaths?: number;
          /** @default 0 */
          bwSquadsFinalKills?: number;
          /** @default 0 */
          bwSquadsKills?: number;
          /** @default 0 */
          bwSquadsWins?: number;
          /** @default 0 */
          bwStreak?: number;
          /** @default 0 */
          bwTriosBedsBroken?: number;
          /** @default 0 */
          bwTriosDeaths?: number;
          /** @default 0 */
          bwTriosFinalKills?: number;
          /** @default 0 */
          bwTriosKills?: number;
          /** @default 0 */
          bwTriosWins?: number;
          /** @default 0 */
          bwWins?: number;
          /** @default 0 */
          cqDeaths?: number;
          /** @default 0 */
          cqDiamondsCollected?: number;
          /** @default 0 */
          cqEmeraldsCollected?: number;
          /** @default 0 */
          cqFlagsCaptured?: number;
          /** @default 0 */
          cqFlagsCollected?: number;
          /** @default 0 */
          cqFlagsReturned?: number;
          /** @default 0 */
          cqGoldCollected?: number;
          /** @default 0 */
          cqIronCollected?: number;
          /** @default 0 */
          cqKills?: number;
          /** @default 0 */
          cqWins?: number;
          /** @default 0 */
          duelsArrowsShot?: number;
          /** @default 0 */
          duelsBestStreak?: number;
          /** @default 0 */
          duelsDeaths?: number;
          /** @default 0 */
          duelsKills?: number;
          /** @default 0 */
          duelsLosses?: number;
          /** @default 0 */
          duelsMeleeHits?: number;
          /** @default 0 */
          duelsStreak?: number;
          /** @default 0 */
          duelsWins?: number;
          /** @default 0 */
          gxp?: number;
          /** @default 0 */
          mmBowKills?: number;
          /** @default 0 */
          mmClassicDeaths?: number;
          /** @default 0 */
          mmClassicKills?: number;
          /** @default 0 */
          mmClassicWins?: number;
          /** @default 0 */
          mmDeaths?: number;
          /** @default 0 */
          mmInfectionDeaths?: number;
          /** @default 0 */
          mmInfectionKills?: number;
          /** @default 0 */
          mmInfectionWins?: number;
          /** @default 0 */
          mmKills?: number;
          /** @default 0 */
          mmKnifeKills?: number;
          /** @default 0 */
          mmThrowKnifeKills?: number;
          /** @default 0 */
          mmWins?: number;
          /** @default 0 */
          msFails?: number;
          /** @default 0 */
          msSuccesses?: number;
          /** @default 0 */
          msWins?: number;
          /** @default 0 */
          onlineTime?: number;
          /** @default 0 */
          scGoals?: number;
          /** @default 0 */
          scWins?: number;
          /** @default 0 */
          sgDeaths?: number;
          /** @default 0 */
          sgKills?: number;
          /** @default 0 */
          sgWins?: number;
          /** @default 0 */
          swArrowsShot?: number;
          /** @default 0 */
          swBlocksBroken?: number;
          /** @default 0 */
          swBlocksPlaced?: number;
          /** @default 0 */
          swCoins?: number;
          /** @default 0 */
          swDeaths?: number;
          /** @default 0 */
          swDoublesDeaths?: number;
          /** @default 0 */
          swDoublesInsaneDeaths?: number;
          /** @default 0 */
          swDoublesInsaneKills?: number;
          /** @default 0 */
          swDoublesKills?: number;
          /** @default 0 */
          swDoublesLosses?: number;
          /** @default 0 */
          swDoublesNormalDeaths?: number;
          /** @default 0 */
          swDoublesNormalKills?: number;
          /** @default 0 */
          swDoublesWins?: number;
          /** @default 0 */
          swEggsThrown?: number;
          /** @default 0 */
          swEpearlsThrown?: number;
          /** @default 0 */
          swKills?: number;
          /** @default 0 */
          swLosses?: number;
          /** @default 0 */
          swSoloDeaths?: number;
          /** @default 0 */
          swSoloInsaneDeaths?: number;
          /** @default 0 */
          swSoloInsaneKills?: number;
          /** @default 0 */
          swSoloKills?: number;
          /** @default 0 */
          swSoloLosses?: number;
          /** @default 0 */
          swSoloNormalDeaths?: number;
          /** @default 0 */
          swSoloNormalKills?: number;
          /** @default 0 */
          swSoloWins?: number;
          /** @default 0 */
          swWins?: number;
          /** @default 0 */
          tbArrowsShot?: number;
          /** @default 0 */
          tbBestStreak?: number;
          /** @default 0 */
          tbDeaths?: number;
          /** @default 0 */
          tbGoals?: number;
          /** @default 0 */
          tbKills?: number;
          /** @default 0 */
          tbLosses?: number;
          /** @default 0 */
          tbMeleeHits?: number;
          /** @default 0 */
          tbStreak?: number;
          /** @default 0 */
          tbWins?: number;
          /** @default 0 */
          trBestStreak?: number;
          /** @default 0 */
          trBlocksDropped?: number;
          /** @default 0 */
          trLosses?: number;
          /** @default 0 */
          trStreak?: number;
          /** @default 0 */
          trTimeRecord?: number;
          /** @default 0 */
          trWins?: number;
          /** @default 0 */
          uhcDeaths?: number;
          /** @default 0 */
          uhcDiamondMined?: number;
          /** @default 0 */
          uhcGoldMined?: number;
          /** @default 0 */
          uhcIronMined?: number;
          /** @default 0 */
          uhcKills?: number;
          /** @default 0 */
          uhcLapisMined?: number;
          /** @default 0 */
          uhcWins?: number;
        };
        extraNested: {
          bh: {
            wins: number;
          };
          bw: {
            kills: number;
            deaths: number;
            solo: {
              kills: number;
              deaths: number;
              beds: {
                broken: number;
              };
              final: {
                kills: number;
              };
              wins: number;
            };
            doubles: {
              kills: number;
              deaths: number;
              beds: {
                broken: number;
              };
              final: {
                kills: number;
              };
              wins: number;
            };
            trios: {
              kills: number;
              deaths: number;
              beds: {
                broken: number;
              };
              final: {
                kills: number;
              };
              wins: number;
            };
            squads: {
              kills: number;
              deaths: number;
              beds: {
                broken: number;
              };
              final: {
                kills: number;
              };
              wins: number;
            };
            beds: {
              broken: number;
            };
            diamonds: {
              collected: number;
            };
            emeralds: {
              collected: number;
            };
            gold: {
              collected: number;
            };
            iron: {
              collected: number;
            };
            final: {
              kills: number;
            };
            streak: number;
            best: {
              streak: number;
            };
            wins: number;
          };
          cq: {
            kills: number;
            deaths: number;
            wins: number;
            flags: {
              collected: number;
              captured: number;
              returned: number;
            };
            diamonds: {
              collected: number;
            };
            emeralds: {
              collected: number;
            };
            gold: {
              collected: number;
            };
            iron: {
              collected: number;
            };
          };
          duels: {
            kills: number;
            deaths: number;
            arrows: {
              shot: number;
            };
            melee: {
              hits: number;
            };
            streak: number;
            best: {
              streak: number;
            };
            wins: number;
            losses: number;
          };
          mm: {
            kills: number;
            deaths: number;
            classic: {
              kills: number;
              deaths: number;
              wins: number;
            };
            infection: {
              kills: number;
              deaths: number;
              wins: number;
            };
            bow: {
              kills: number;
            };
            knife: {
              kills: number;
            };
            throw: {
              knife: {
                kills: number;
              };
            };
            wins: number;
          };
          ms: {
            successes: number;
            fails: number;
            wins: number;
          };
          sc: {
            wins: number;
            goals: number;
          };
          sg: {
            kills: number;
            deaths: number;
            wins: number;
          };
          sw: {
            coins: number;
            kills: number;
            deaths: number;
            solo: {
              kills: number;
              deaths: number;
              normal: {
                kills: number;
                deaths: number;
              };
              insane: {
                kills: number;
                deaths: number;
              };
              wins: number;
              losses: number;
            };
            doubles: {
              kills: number;
              deaths: number;
              normal: {
                kills: number;
                deaths: number;
              };
              insane: {
                kills: number;
                deaths: number;
              };
              wins: number;
              losses: number;
            };
            blocks: {
              broken: number;
              placed: number;
            };
            arrows: {
              shot: number;
            };
            eggs: {
              thrown: number;
            };
            epearls: {
              thrown: number;
            };
            wins: number;
            losses: number;
          };
          tb: {
            kills: number;
            deaths: number;
            arrows: {
              shot: number;
            };
            melee: {
              hits: number;
            };
            goals: number;
            streak: number;
            best: {
              streak: number;
            };
            wins: number;
            losses: number;
          };
          tr: {
            wins: number;
            losses: number;
            streak: number;
            best: {
              streak: number;
            };
            blocks: {
              dropped: number;
            };
            time: {
              record: number;
            };
          };
          uhc: {
            kills: number;
            deaths: number;
            wins: number;
            iron: {
              mined: number;
            };
            gold: {
              mined: number;
            };
            lapis: {
              mined: number;
            };
            diamond: {
              mined: number;
            };
          };
          online: {
            time: number;
          };
          gxp: number;
        };
      };
    };
    PlayerSkinResponseData: {
      skin: boolean;
      /** @enum {string} */
      skinType: "steve" | "alex";
      skinVisibility: boolean;
      base64: string;
      raw: string | null;
    };
    PlayerSkinQuery: {
      /** @default false */
      dataOnly?: boolean;
    };
    PlayerResponseStats: {
      kills: number;
      killsTotal: number;
      deaths: number;
      deathsTotal: number;
      kdr: number;
      kdrTotal: number;
      wins: number;
      winsData: {
        /** @default 0 */
        BH?: number;
        /** @default 0 */
        BW?: number;
        /** @default 0 */
        CQ?: number;
        /** @default 0 */
        Duels?: number;
        /** @default 0 */
        MM?: number;
        /** @default 0 */
        MS?: number;
        /** @default 0 */
        SC?: number;
        /** @default 0 */
        SG?: number;
        /** @default 0 */
        SW?: number;
        /** @default 0 */
        TB?: number;
        /** @default 0 */
        TR?: number;
        /** @default 0 */
        UHC?: number;
      };
      losses: number;
      wlr: number;
      extra: {
        /** @default 0 */
        bhWins?: number;
        /** @default 0 */
        bwBedsBroken?: number;
        /** @default 0 */
        bwBestStreak?: number;
        /** @default 0 */
        bwDeaths?: number;
        /** @default 0 */
        bwDiamondsCollected?: number;
        /** @default 0 */
        bwDoublesBedsBroken?: number;
        /** @default 0 */
        bwDoublesDeaths?: number;
        /** @default 0 */
        bwDoublesFinalKills?: number;
        /** @default 0 */
        bwDoublesKills?: number;
        /** @default 0 */
        bwDoublesWins?: number;
        /** @default 0 */
        bwEmeraldsCollected?: number;
        /** @default 0 */
        bwFinalKills?: number;
        /** @default 0 */
        bwGoldCollected?: number;
        /** @default 0 */
        bwIronCollected?: number;
        /** @default 0 */
        bwKills?: number;
        /** @default 0 */
        bwSoloBedsBroken?: number;
        /** @default 0 */
        bwSoloDeaths?: number;
        /** @default 0 */
        bwSoloFinalKills?: number;
        /** @default 0 */
        bwSoloKills?: number;
        /** @default 0 */
        bwSoloWins?: number;
        /** @default 0 */
        bwSquadsBedsBroken?: number;
        /** @default 0 */
        bwSquadsDeaths?: number;
        /** @default 0 */
        bwSquadsFinalKills?: number;
        /** @default 0 */
        bwSquadsKills?: number;
        /** @default 0 */
        bwSquadsWins?: number;
        /** @default 0 */
        bwStreak?: number;
        /** @default 0 */
        bwTriosBedsBroken?: number;
        /** @default 0 */
        bwTriosDeaths?: number;
        /** @default 0 */
        bwTriosFinalKills?: number;
        /** @default 0 */
        bwTriosKills?: number;
        /** @default 0 */
        bwTriosWins?: number;
        /** @default 0 */
        bwWins?: number;
        /** @default 0 */
        cqDeaths?: number;
        /** @default 0 */
        cqDiamondsCollected?: number;
        /** @default 0 */
        cqEmeraldsCollected?: number;
        /** @default 0 */
        cqFlagsCaptured?: number;
        /** @default 0 */
        cqFlagsCollected?: number;
        /** @default 0 */
        cqFlagsReturned?: number;
        /** @default 0 */
        cqGoldCollected?: number;
        /** @default 0 */
        cqIronCollected?: number;
        /** @default 0 */
        cqKills?: number;
        /** @default 0 */
        cqWins?: number;
        /** @default 0 */
        duelsArrowsShot?: number;
        /** @default 0 */
        duelsBestStreak?: number;
        /** @default 0 */
        duelsDeaths?: number;
        /** @default 0 */
        duelsKills?: number;
        /** @default 0 */
        duelsLosses?: number;
        /** @default 0 */
        duelsMeleeHits?: number;
        /** @default 0 */
        duelsStreak?: number;
        /** @default 0 */
        duelsWins?: number;
        /** @default 0 */
        gxp?: number;
        /** @default 0 */
        mmBowKills?: number;
        /** @default 0 */
        mmClassicDeaths?: number;
        /** @default 0 */
        mmClassicKills?: number;
        /** @default 0 */
        mmClassicWins?: number;
        /** @default 0 */
        mmDeaths?: number;
        /** @default 0 */
        mmInfectionDeaths?: number;
        /** @default 0 */
        mmInfectionKills?: number;
        /** @default 0 */
        mmInfectionWins?: number;
        /** @default 0 */
        mmKills?: number;
        /** @default 0 */
        mmKnifeKills?: number;
        /** @default 0 */
        mmThrowKnifeKills?: number;
        /** @default 0 */
        mmWins?: number;
        /** @default 0 */
        msFails?: number;
        /** @default 0 */
        msSuccesses?: number;
        /** @default 0 */
        msWins?: number;
        /** @default 0 */
        onlineTime?: number;
        /** @default 0 */
        scGoals?: number;
        /** @default 0 */
        scWins?: number;
        /** @default 0 */
        sgDeaths?: number;
        /** @default 0 */
        sgKills?: number;
        /** @default 0 */
        sgWins?: number;
        /** @default 0 */
        swArrowsShot?: number;
        /** @default 0 */
        swBlocksBroken?: number;
        /** @default 0 */
        swBlocksPlaced?: number;
        /** @default 0 */
        swCoins?: number;
        /** @default 0 */
        swDeaths?: number;
        /** @default 0 */
        swDoublesDeaths?: number;
        /** @default 0 */
        swDoublesInsaneDeaths?: number;
        /** @default 0 */
        swDoublesInsaneKills?: number;
        /** @default 0 */
        swDoublesKills?: number;
        /** @default 0 */
        swDoublesLosses?: number;
        /** @default 0 */
        swDoublesNormalDeaths?: number;
        /** @default 0 */
        swDoublesNormalKills?: number;
        /** @default 0 */
        swDoublesWins?: number;
        /** @default 0 */
        swEggsThrown?: number;
        /** @default 0 */
        swEpearlsThrown?: number;
        /** @default 0 */
        swKills?: number;
        /** @default 0 */
        swLosses?: number;
        /** @default 0 */
        swSoloDeaths?: number;
        /** @default 0 */
        swSoloInsaneDeaths?: number;
        /** @default 0 */
        swSoloInsaneKills?: number;
        /** @default 0 */
        swSoloKills?: number;
        /** @default 0 */
        swSoloLosses?: number;
        /** @default 0 */
        swSoloNormalDeaths?: number;
        /** @default 0 */
        swSoloNormalKills?: number;
        /** @default 0 */
        swSoloWins?: number;
        /** @default 0 */
        swWins?: number;
        /** @default 0 */
        tbArrowsShot?: number;
        /** @default 0 */
        tbBestStreak?: number;
        /** @default 0 */
        tbDeaths?: number;
        /** @default 0 */
        tbGoals?: number;
        /** @default 0 */
        tbKills?: number;
        /** @default 0 */
        tbLosses?: number;
        /** @default 0 */
        tbMeleeHits?: number;
        /** @default 0 */
        tbStreak?: number;
        /** @default 0 */
        tbWins?: number;
        /** @default 0 */
        trBestStreak?: number;
        /** @default 0 */
        trBlocksDropped?: number;
        /** @default 0 */
        trLosses?: number;
        /** @default 0 */
        trStreak?: number;
        /** @default 0 */
        trTimeRecord?: number;
        /** @default 0 */
        trWins?: number;
        /** @default 0 */
        uhcDeaths?: number;
        /** @default 0 */
        uhcDiamondMined?: number;
        /** @default 0 */
        uhcGoldMined?: number;
        /** @default 0 */
        uhcIronMined?: number;
        /** @default 0 */
        uhcKills?: number;
        /** @default 0 */
        uhcLapisMined?: number;
        /** @default 0 */
        uhcWins?: number;
      };
      extraNested: {
        bh: {
          wins: number;
        };
        bw: {
          kills: number;
          deaths: number;
          solo: {
            kills: number;
            deaths: number;
            beds: {
              broken: number;
            };
            final: {
              kills: number;
            };
            wins: number;
          };
          doubles: {
            kills: number;
            deaths: number;
            beds: {
              broken: number;
            };
            final: {
              kills: number;
            };
            wins: number;
          };
          trios: {
            kills: number;
            deaths: number;
            beds: {
              broken: number;
            };
            final: {
              kills: number;
            };
            wins: number;
          };
          squads: {
            kills: number;
            deaths: number;
            beds: {
              broken: number;
            };
            final: {
              kills: number;
            };
            wins: number;
          };
          beds: {
            broken: number;
          };
          diamonds: {
            collected: number;
          };
          emeralds: {
            collected: number;
          };
          gold: {
            collected: number;
          };
          iron: {
            collected: number;
          };
          final: {
            kills: number;
          };
          streak: number;
          best: {
            streak: number;
          };
          wins: number;
        };
        cq: {
          kills: number;
          deaths: number;
          wins: number;
          flags: {
            collected: number;
            captured: number;
            returned: number;
          };
          diamonds: {
            collected: number;
          };
          emeralds: {
            collected: number;
          };
          gold: {
            collected: number;
          };
          iron: {
            collected: number;
          };
        };
        duels: {
          kills: number;
          deaths: number;
          arrows: {
            shot: number;
          };
          melee: {
            hits: number;
          };
          streak: number;
          best: {
            streak: number;
          };
          wins: number;
          losses: number;
        };
        mm: {
          kills: number;
          deaths: number;
          classic: {
            kills: number;
            deaths: number;
            wins: number;
          };
          infection: {
            kills: number;
            deaths: number;
            wins: number;
          };
          bow: {
            kills: number;
          };
          knife: {
            kills: number;
          };
          throw: {
            knife: {
              kills: number;
            };
          };
          wins: number;
        };
        ms: {
          successes: number;
          fails: number;
          wins: number;
        };
        sc: {
          wins: number;
          goals: number;
        };
        sg: {
          kills: number;
          deaths: number;
          wins: number;
        };
        sw: {
          coins: number;
          kills: number;
          deaths: number;
          solo: {
            kills: number;
            deaths: number;
            normal: {
              kills: number;
              deaths: number;
            };
            insane: {
              kills: number;
              deaths: number;
            };
            wins: number;
            losses: number;
          };
          doubles: {
            kills: number;
            deaths: number;
            normal: {
              kills: number;
              deaths: number;
            };
            insane: {
              kills: number;
              deaths: number;
            };
            wins: number;
            losses: number;
          };
          blocks: {
            broken: number;
            placed: number;
          };
          arrows: {
            shot: number;
          };
          eggs: {
            thrown: number;
          };
          epearls: {
            thrown: number;
          };
          wins: number;
          losses: number;
        };
        tb: {
          kills: number;
          deaths: number;
          arrows: {
            shot: number;
          };
          melee: {
            hits: number;
          };
          goals: number;
          streak: number;
          best: {
            streak: number;
          };
          wins: number;
          losses: number;
        };
        tr: {
          wins: number;
          losses: number;
          streak: number;
          best: {
            streak: number;
          };
          blocks: {
            dropped: number;
          };
          time: {
            record: number;
          };
        };
        uhc: {
          kills: number;
          deaths: number;
          wins: number;
          iron: {
            mined: number;
          };
          gold: {
            mined: number;
          };
          lapis: {
            mined: number;
          };
          diamond: {
            mined: number;
          };
        };
        online: {
          time: number;
        };
        gxp: number;
      };
    };
    PlayerResponse: {
      xuid: string;
      name: string;
      /** Format: uri */
      avatar: string;
      avatarBlurhash?: string;
      /** Format: uri */
      skin: string;
      online?: boolean;
      flags: number;
      /** @enum {number} */
      dmStatus: 0 | 1 | 2;
      bio: string;
      discordId: string | null;
      discordTag: string | null;
      guild: string | null;
      ranks: ("Admin" | "Dev" | "Supervisor" | "Mod" | "Crew" | "Trainee" | "Builder" | "Designer" | "Game Designer" | "Media" | "Discord" | "Partner" | "Titan" | "Legend" | "Emerald" | "Ultra" | "Youtube" | "Tester")[];
      /** @enum {string|null} */
      tier: "Silver" | "Gold" | "Guardian" | "Eagle" | "Elite" | null;
      banned?: boolean;
      bannedUntil?: number | null;
      muted?: boolean;
      mutedUntil?: number | null;
      staff: boolean;
      titan: boolean;
      /** Format: date-time */
      titanUntil: string | null;
      /** Format: date-time */
      lastRankTimestamp: string | null;
      /** @enum {number} */
      voteStatus?: 0 | 1 | 2;
      firstJoin: string | null;
      firstJoined: number;
      lastJoin: string | null;
      lastJoined: number;
      lastQuit: number;
      lastSeen: string | null;
      lastServer: string;
      crateKeys: number;
      credits: number;
      deaths?: number;
      deathsTotal?: number;
      kdr?: number;
      kdrTotal?: number;
      kills?: number;
      killsTotal?: number;
      level: number;
      losses?: number;
      wins?: number;
      wlr?: number;
      xp: number;
      formattedLevel: string;
      levelColors: ("#000000" | "#0000aa" | "#00aa00" | "#00aaaa" | "#aa0000" | "#aa00aa" | "#ffaa00" | "#aaaaaa" | "#555555" | "#5555ff" | "#55ff55" | "#55ffff" | "#ff5555" | "#ff55ff" | "#ffff55" | "#ffffff" | "#ddd605")[];
      /** @enum {string} */
      levelFormat: "§k" | "§l" | "§o" | "§r";
      rankColors: (string)[];
      skinVisibility: boolean;
      tierColor: string | null;
      youtubeChannelUrl: string | null;
      killsUntilNextKdr?: number;
      winsUntilNextWlr?: number;
      xpToNextLevel: number;
      discoveredTokens: (string)[];
      discoveredZones: (string)[];
      factionData?: ({
        tags: number;
        registerDate: string;
        coins: number;
        kills: number;
        bounty: number;
        faction: {
          id: number;
          name: string;
          strength: number;
          allies: (string)[];
          leader?: Record<string, never>;
          officers: (unknown)[];
          members: (unknown)[];
        } | null;
      }) | null;
      guildData?: ({
        id: number;
        name: string;
        maxSize: number;
        memberCount: number;
        motd: string;
        position?: number;
        rawTag: string;
        tag: string | null;
        /** @enum {string|null} */
        tagColor: "#000000" | "#0000aa" | "#00aa00" | "#00aaaa" | "#aa0000" | "#aa00aa" | "#ffaa00" | "#aaaaaa" | "#555555" | "#5555ff" | "#55ff55" | "#55ffff" | "#ff5555" | "#ff55ff" | "#ffff55" | "#ffffff" | "#ddd605" | null;
        xp: number;
        xpToNextLevel: number;
        level: number;
        leader?: Record<string, never>;
        officers: (unknown)[];
        members: (unknown)[];
        discordInvite: string | null;
        discordId: string | null;
      }) | null;
      lastServerParsed: {
        region: string | null;
        serverName: string | null;
        serverNameLong: string | null;
        serverType: string | null;
        pretty: string;
      };
      punishmentsNew?: ({
          id: string;
          /** @description The punishment `reasonName` and `reasonCategory` joined together. */
          reason: string;
          reasonName: string;
          reasonCategory: string;
          /** @enum {string} */
          type: "BAN" | "MUTE";
          /** @description If true, the punishment does not expire. */
          permanent: boolean;
          /** @description For migration punishments, this value is 0. */
          issuedAt: number;
          /** @description If `permanent` is true, this value is -1. */
          validUntil: number;
          /** @description Whether this punishment is currently active. */
          active: boolean;
          /** @description The XUIDs affected by this punishment. */
          affectedXuids: (string)[];
          /** @description The corresponding player names to `affectedXuids`. */
          affectedPlayers: (string)[];
          alt: boolean;
        })[];
      skinData?: {
        skin: boolean;
        /** @enum {string} */
        skinType: "steve" | "alex";
        skinVisibility: boolean;
        base64: string;
        raw: string | null;
      };
      winsData?: {
        /** @default 0 */
        BH?: number;
        /** @default 0 */
        BW?: number;
        /** @default 0 */
        CQ?: number;
        /** @default 0 */
        Duels?: number;
        /** @default 0 */
        MM?: number;
        /** @default 0 */
        MS?: number;
        /** @default 0 */
        SC?: number;
        /** @default 0 */
        SG?: number;
        /** @default 0 */
        SW?: number;
        /** @default 0 */
        TB?: number;
        /** @default 0 */
        TR?: number;
        /** @default 0 */
        UHC?: number;
      };
      extra?: {
        /** @default 0 */
        bhWins?: number;
        /** @default 0 */
        bwBedsBroken?: number;
        /** @default 0 */
        bwBestStreak?: number;
        /** @default 0 */
        bwDeaths?: number;
        /** @default 0 */
        bwDiamondsCollected?: number;
        /** @default 0 */
        bwDoublesBedsBroken?: number;
        /** @default 0 */
        bwDoublesDeaths?: number;
        /** @default 0 */
        bwDoublesFinalKills?: number;
        /** @default 0 */
        bwDoublesKills?: number;
        /** @default 0 */
        bwDoublesWins?: number;
        /** @default 0 */
        bwEmeraldsCollected?: number;
        /** @default 0 */
        bwFinalKills?: number;
        /** @default 0 */
        bwGoldCollected?: number;
        /** @default 0 */
        bwIronCollected?: number;
        /** @default 0 */
        bwKills?: number;
        /** @default 0 */
        bwSoloBedsBroken?: number;
        /** @default 0 */
        bwSoloDeaths?: number;
        /** @default 0 */
        bwSoloFinalKills?: number;
        /** @default 0 */
        bwSoloKills?: number;
        /** @default 0 */
        bwSoloWins?: number;
        /** @default 0 */
        bwSquadsBedsBroken?: number;
        /** @default 0 */
        bwSquadsDeaths?: number;
        /** @default 0 */
        bwSquadsFinalKills?: number;
        /** @default 0 */
        bwSquadsKills?: number;
        /** @default 0 */
        bwSquadsWins?: number;
        /** @default 0 */
        bwStreak?: number;
        /** @default 0 */
        bwTriosBedsBroken?: number;
        /** @default 0 */
        bwTriosDeaths?: number;
        /** @default 0 */
        bwTriosFinalKills?: number;
        /** @default 0 */
        bwTriosKills?: number;
        /** @default 0 */
        bwTriosWins?: number;
        /** @default 0 */
        bwWins?: number;
        /** @default 0 */
        cqDeaths?: number;
        /** @default 0 */
        cqDiamondsCollected?: number;
        /** @default 0 */
        cqEmeraldsCollected?: number;
        /** @default 0 */
        cqFlagsCaptured?: number;
        /** @default 0 */
        cqFlagsCollected?: number;
        /** @default 0 */
        cqFlagsReturned?: number;
        /** @default 0 */
        cqGoldCollected?: number;
        /** @default 0 */
        cqIronCollected?: number;
        /** @default 0 */
        cqKills?: number;
        /** @default 0 */
        cqWins?: number;
        /** @default 0 */
        duelsArrowsShot?: number;
        /** @default 0 */
        duelsBestStreak?: number;
        /** @default 0 */
        duelsDeaths?: number;
        /** @default 0 */
        duelsKills?: number;
        /** @default 0 */
        duelsLosses?: number;
        /** @default 0 */
        duelsMeleeHits?: number;
        /** @default 0 */
        duelsStreak?: number;
        /** @default 0 */
        duelsWins?: number;
        /** @default 0 */
        gxp?: number;
        /** @default 0 */
        mmBowKills?: number;
        /** @default 0 */
        mmClassicDeaths?: number;
        /** @default 0 */
        mmClassicKills?: number;
        /** @default 0 */
        mmClassicWins?: number;
        /** @default 0 */
        mmDeaths?: number;
        /** @default 0 */
        mmInfectionDeaths?: number;
        /** @default 0 */
        mmInfectionKills?: number;
        /** @default 0 */
        mmInfectionWins?: number;
        /** @default 0 */
        mmKills?: number;
        /** @default 0 */
        mmKnifeKills?: number;
        /** @default 0 */
        mmThrowKnifeKills?: number;
        /** @default 0 */
        mmWins?: number;
        /** @default 0 */
        msFails?: number;
        /** @default 0 */
        msSuccesses?: number;
        /** @default 0 */
        msWins?: number;
        /** @default 0 */
        onlineTime?: number;
        /** @default 0 */
        scGoals?: number;
        /** @default 0 */
        scWins?: number;
        /** @default 0 */
        sgDeaths?: number;
        /** @default 0 */
        sgKills?: number;
        /** @default 0 */
        sgWins?: number;
        /** @default 0 */
        swArrowsShot?: number;
        /** @default 0 */
        swBlocksBroken?: number;
        /** @default 0 */
        swBlocksPlaced?: number;
        /** @default 0 */
        swCoins?: number;
        /** @default 0 */
        swDeaths?: number;
        /** @default 0 */
        swDoublesDeaths?: number;
        /** @default 0 */
        swDoublesInsaneDeaths?: number;
        /** @default 0 */
        swDoublesInsaneKills?: number;
        /** @default 0 */
        swDoublesKills?: number;
        /** @default 0 */
        swDoublesLosses?: number;
        /** @default 0 */
        swDoublesNormalDeaths?: number;
        /** @default 0 */
        swDoublesNormalKills?: number;
        /** @default 0 */
        swDoublesWins?: number;
        /** @default 0 */
        swEggsThrown?: number;
        /** @default 0 */
        swEpearlsThrown?: number;
        /** @default 0 */
        swKills?: number;
        /** @default 0 */
        swLosses?: number;
        /** @default 0 */
        swSoloDeaths?: number;
        /** @default 0 */
        swSoloInsaneDeaths?: number;
        /** @default 0 */
        swSoloInsaneKills?: number;
        /** @default 0 */
        swSoloKills?: number;
        /** @default 0 */
        swSoloLosses?: number;
        /** @default 0 */
        swSoloNormalDeaths?: number;
        /** @default 0 */
        swSoloNormalKills?: number;
        /** @default 0 */
        swSoloWins?: number;
        /** @default 0 */
        swWins?: number;
        /** @default 0 */
        tbArrowsShot?: number;
        /** @default 0 */
        tbBestStreak?: number;
        /** @default 0 */
        tbDeaths?: number;
        /** @default 0 */
        tbGoals?: number;
        /** @default 0 */
        tbKills?: number;
        /** @default 0 */
        tbLosses?: number;
        /** @default 0 */
        tbMeleeHits?: number;
        /** @default 0 */
        tbStreak?: number;
        /** @default 0 */
        tbWins?: number;
        /** @default 0 */
        trBestStreak?: number;
        /** @default 0 */
        trBlocksDropped?: number;
        /** @default 0 */
        trLosses?: number;
        /** @default 0 */
        trStreak?: number;
        /** @default 0 */
        trTimeRecord?: number;
        /** @default 0 */
        trWins?: number;
        /** @default 0 */
        uhcDeaths?: number;
        /** @default 0 */
        uhcDiamondMined?: number;
        /** @default 0 */
        uhcGoldMined?: number;
        /** @default 0 */
        uhcIronMined?: number;
        /** @default 0 */
        uhcKills?: number;
        /** @default 0 */
        uhcLapisMined?: number;
        /** @default 0 */
        uhcWins?: number;
      };
      extraNested?: {
        bh: {
          wins: number;
        };
        bw: {
          kills: number;
          deaths: number;
          solo: {
            kills: number;
            deaths: number;
            beds: {
              broken: number;
            };
            final: {
              kills: number;
            };
            wins: number;
          };
          doubles: {
            kills: number;
            deaths: number;
            beds: {
              broken: number;
            };
            final: {
              kills: number;
            };
            wins: number;
          };
          trios: {
            kills: number;
            deaths: number;
            beds: {
              broken: number;
            };
            final: {
              kills: number;
            };
            wins: number;
          };
          squads: {
            kills: number;
            deaths: number;
            beds: {
              broken: number;
            };
            final: {
              kills: number;
            };
            wins: number;
          };
          beds: {
            broken: number;
          };
          diamonds: {
            collected: number;
          };
          emeralds: {
            collected: number;
          };
          gold: {
            collected: number;
          };
          iron: {
            collected: number;
          };
          final: {
            kills: number;
          };
          streak: number;
          best: {
            streak: number;
          };
          wins: number;
        };
        cq: {
          kills: number;
          deaths: number;
          wins: number;
          flags: {
            collected: number;
            captured: number;
            returned: number;
          };
          diamonds: {
            collected: number;
          };
          emeralds: {
            collected: number;
          };
          gold: {
            collected: number;
          };
          iron: {
            collected: number;
          };
        };
        duels: {
          kills: number;
          deaths: number;
          arrows: {
            shot: number;
          };
          melee: {
            hits: number;
          };
          streak: number;
          best: {
            streak: number;
          };
          wins: number;
          losses: number;
        };
        mm: {
          kills: number;
          deaths: number;
          classic: {
            kills: number;
            deaths: number;
            wins: number;
          };
          infection: {
            kills: number;
            deaths: number;
            wins: number;
          };
          bow: {
            kills: number;
          };
          knife: {
            kills: number;
          };
          throw: {
            knife: {
              kills: number;
            };
          };
          wins: number;
        };
        ms: {
          successes: number;
          fails: number;
          wins: number;
        };
        sc: {
          wins: number;
          goals: number;
        };
        sg: {
          kills: number;
          deaths: number;
          wins: number;
        };
        sw: {
          coins: number;
          kills: number;
          deaths: number;
          solo: {
            kills: number;
            deaths: number;
            normal: {
              kills: number;
              deaths: number;
            };
            insane: {
              kills: number;
              deaths: number;
            };
            wins: number;
            losses: number;
          };
          doubles: {
            kills: number;
            deaths: number;
            normal: {
              kills: number;
              deaths: number;
            };
            insane: {
              kills: number;
              deaths: number;
            };
            wins: number;
            losses: number;
          };
          blocks: {
            broken: number;
            placed: number;
          };
          arrows: {
            shot: number;
          };
          eggs: {
            thrown: number;
          };
          epearls: {
            thrown: number;
          };
          wins: number;
          losses: number;
        };
        tb: {
          kills: number;
          deaths: number;
          arrows: {
            shot: number;
          };
          melee: {
            hits: number;
          };
          goals: number;
          streak: number;
          best: {
            streak: number;
          };
          wins: number;
          losses: number;
        };
        tr: {
          wins: number;
          losses: number;
          streak: number;
          best: {
            streak: number;
          };
          blocks: {
            dropped: number;
          };
          time: {
            record: number;
          };
        };
        uhc: {
          kills: number;
          deaths: number;
          wins: number;
          iron: {
            mined: number;
          };
          gold: {
            mined: number;
          };
          lapis: {
            mined: number;
          };
          diamond: {
            mined: number;
          };
        };
        online: {
          time: number;
        };
        gxp: number;
      };
      leaderboard: boolean;
      /** @deprecated use `credits` instead. */
      statusCredits: number;
    };
    PlayerQuery: {
      /** @default false */
      expand?: boolean;
      /** @default true */
      withFactionData?: boolean;
      /** @default false */
      withGuildData?: boolean;
      /** @default true */
      withOnline?: boolean;
      /** @default true */
      withPunishments?: boolean;
      /** @default false */
      withSkinData?: boolean;
      /** @default true */
      withStats?: boolean;
      /** @default true */
      withVoteStatus?: boolean;
      /** @default false */
      withAvatarBlurhash?: boolean;
      /**
       * @default global
       * @enum {string}
       */
      period?: "global" | "daily" | "weekly" | "biweekly" | "monthly" | "yearly";
    };
    PlayerPunishmentsResponse: {
      xuid: string;
      name: string;
      punishments: ({
          id: string;
          /** @description The punishment `reasonName` and `reasonCategory` joined together. */
          reason: string;
          reasonName: string;
          reasonCategory: string;
          /** @enum {string} */
          type: "BAN" | "MUTE";
          /** @description If true, the punishment does not expire. */
          permanent: boolean;
          /** @description For migration punishments, this value is 0. */
          issuedAt: number;
          /** @description If `permanent` is true, this value is -1. */
          validUntil: number;
          /** @description Whether this punishment is currently active. */
          active: boolean;
          /** @description The XUIDs affected by this punishment. */
          affectedXuids: (string)[];
          /** @description The corresponding player names to `affectedXuids`. */
          affectedPlayers: (string)[];
          alt: boolean;
        })[];
    };
    PlayerPunishmentResponse: {
      id: string;
      /** @description The punishment `reasonName` and `reasonCategory` joined together. */
      reason: string;
      reasonName: string;
      reasonCategory: string;
      /** @enum {string} */
      type: "BAN" | "MUTE";
      /** @description If true, the punishment does not expire. */
      permanent: boolean;
      /** @description For migration punishments, this value is 0. */
      issuedAt: number;
      /** @description If `permanent` is true, this value is -1. */
      validUntil: number;
      /** @description Whether this punishment is currently active. */
      active: boolean;
      /** @description The XUIDs affected by this punishment. */
      affectedXuids: (string)[];
      /** @description The corresponding player names to `affectedXuids`. */
      affectedPlayers: (string)[];
      alt: boolean;
    };
    PlayerLeaderboardResponse: {
      player: string;
      data: {
        bhWins: number;
        bwBedsBroken: number;
        bwDoublesBedsBroken: number;
        bwDoublesFinalKills: number;
        bwDoublesKills: number;
        bwDoublesWins: number;
        bwFinalKills: number;
        bwKills: number;
        bwSoloBedsBroken: number;
        bwSoloFinalKills: number;
        bwSoloKills: number;
        bwSoloWins: number;
        bwSquadsBedsBroken: number;
        bwSquadsFinalKills: number;
        bwSquadsKills: number;
        bwSquadsWins: number;
        bwTriosBedsBroken: number;
        bwTriosFinalKills: number;
        bwTriosKills: number;
        bwTriosWins: number;
        bwWins: number;
        cqFlagsCaptured: number;
        cqKills: number;
        cqWins: number;
        duelsKills: number;
        duelsWins: number;
        kills: number;
        mmBowKills: number;
        mmClassicKills: number;
        mmClassicWins: number;
        mmInfectionKills: number;
        mmInfectionWins: number;
        mmKills: number;
        mmKnifeKills: number;
        mmThrowKnifeKills: number;
        mmWins: number;
        msWins: number;
        scWins: number;
        sgKills: number;
        sgWins: number;
        swDoublesInsaneKills: number;
        swDoublesKills: number;
        swDoublesNormalKills: number;
        swDoublesWins: number;
        swKills: number;
        swSoloInsaneKills: number;
        swSoloKills: number;
        swSoloNormalKills: number;
        swSoloWins: number;
        swWins: number;
        tbKills: number;
        tbWins: number;
        wins: number;
      };
      dataNested: {
        bh: {
          wins: number;
        };
        bw: {
          beds: {
            broken: number;
          };
          doubles: {
            beds: {
              broken: number;
            };
            final: {
              kills: number;
            };
            kills: number;
            wins: number;
          };
          final: {
            kills: number;
          };
          kills: number;
          solo: {
            beds: {
              broken: number;
            };
            final: {
              kills: number;
            };
            kills: number;
            wins: number;
          };
          squads: {
            beds: {
              broken: number;
            };
            final: {
              kills: number;
            };
            kills: number;
            wins: number;
          };
          trios: {
            beds: {
              broken: number;
            };
            final: {
              kills: number;
            };
            kills: number;
            wins: number;
          };
          wins: number;
        };
        cq: {
          flags: {
            captured: number;
          };
          kills: number;
          wins: number;
        };
        duels: {
          kills: number;
          wins: number;
        };
        kills: number;
        mm: {
          bow: {
            kills: number;
          };
          classic: {
            kills: number;
            wins: number;
          };
          infection: {
            kills: number;
            wins: number;
          };
          kills: number;
          knife: {
            kills: number;
          };
          throw: {
            knife: {
              kills: number;
            };
          };
          wins: number;
        };
        ms: {
          wins: number;
        };
        sc: {
          wins: number;
        };
        sg: {
          kills: number;
          wins: number;
        };
        sw: {
          doubles: {
            insane: {
              kills: number;
            };
            kills: number;
            normal: {
              kills: number;
            };
            wins: number;
          };
          kills: number;
          solo: {
            insane: {
              kills: number;
            };
            kills: number;
            normal: {
              kills: number;
            };
            wins: number;
          };
          wins: number;
        };
        tb: {
          kills: number;
          wins: number;
        };
        wins: number;
      };
      timestamp: number;
    };
    PlayerLeaderboardQuery: {
      /**
       * @default global
       * @enum {string}
       */
      period?: "global" | "daily" | "weekly" | "biweekly" | "monthly" | "yearly";
    };
    PlayerLeaderboardDataNested: {
      bh: {
        wins: number;
      };
      bw: {
        beds: {
          broken: number;
        };
        doubles: {
          beds: {
            broken: number;
          };
          final: {
            kills: number;
          };
          kills: number;
          wins: number;
        };
        final: {
          kills: number;
        };
        kills: number;
        solo: {
          beds: {
            broken: number;
          };
          final: {
            kills: number;
          };
          kills: number;
          wins: number;
        };
        squads: {
          beds: {
            broken: number;
          };
          final: {
            kills: number;
          };
          kills: number;
          wins: number;
        };
        trios: {
          beds: {
            broken: number;
          };
          final: {
            kills: number;
          };
          kills: number;
          wins: number;
        };
        wins: number;
      };
      cq: {
        flags: {
          captured: number;
        };
        kills: number;
        wins: number;
      };
      duels: {
        kills: number;
        wins: number;
      };
      kills: number;
      mm: {
        bow: {
          kills: number;
        };
        classic: {
          kills: number;
          wins: number;
        };
        infection: {
          kills: number;
          wins: number;
        };
        kills: number;
        knife: {
          kills: number;
        };
        throw: {
          knife: {
            kills: number;
          };
        };
        wins: number;
      };
      ms: {
        wins: number;
      };
      sc: {
        wins: number;
      };
      sg: {
        kills: number;
        wins: number;
      };
      sw: {
        doubles: {
          insane: {
            kills: number;
          };
          kills: number;
          normal: {
            kills: number;
          };
          wins: number;
        };
        kills: number;
        solo: {
          insane: {
            kills: number;
          };
          kills: number;
          normal: {
            kills: number;
          };
          wins: number;
        };
        wins: number;
      };
      tb: {
        kills: number;
        wins: number;
      };
      wins: number;
    };
    PlayerLeaderboardData: {
      bhWins: number;
      bwBedsBroken: number;
      bwDoublesBedsBroken: number;
      bwDoublesFinalKills: number;
      bwDoublesKills: number;
      bwDoublesWins: number;
      bwFinalKills: number;
      bwKills: number;
      bwSoloBedsBroken: number;
      bwSoloFinalKills: number;
      bwSoloKills: number;
      bwSoloWins: number;
      bwSquadsBedsBroken: number;
      bwSquadsFinalKills: number;
      bwSquadsKills: number;
      bwSquadsWins: number;
      bwTriosBedsBroken: number;
      bwTriosFinalKills: number;
      bwTriosKills: number;
      bwTriosWins: number;
      bwWins: number;
      cqFlagsCaptured: number;
      cqKills: number;
      cqWins: number;
      duelsKills: number;
      duelsWins: number;
      kills: number;
      mmBowKills: number;
      mmClassicKills: number;
      mmClassicWins: number;
      mmInfectionKills: number;
      mmInfectionWins: number;
      mmKills: number;
      mmKnifeKills: number;
      mmThrowKnifeKills: number;
      mmWins: number;
      msWins: number;
      scWins: number;
      sgKills: number;
      sgWins: number;
      swDoublesInsaneKills: number;
      swDoublesKills: number;
      swDoublesNormalKills: number;
      swDoublesWins: number;
      swKills: number;
      swSoloInsaneKills: number;
      swSoloKills: number;
      swSoloNormalKills: number;
      swSoloWins: number;
      swWins: number;
      tbKills: number;
      tbWins: number;
      wins: number;
    };
    PlayerLeaderboardBulkResponse: ({
        player: string;
        data: {
          bhWins: number;
          bwBedsBroken: number;
          bwDoublesBedsBroken: number;
          bwDoublesFinalKills: number;
          bwDoublesKills: number;
          bwDoublesWins: number;
          bwFinalKills: number;
          bwKills: number;
          bwSoloBedsBroken: number;
          bwSoloFinalKills: number;
          bwSoloKills: number;
          bwSoloWins: number;
          bwSquadsBedsBroken: number;
          bwSquadsFinalKills: number;
          bwSquadsKills: number;
          bwSquadsWins: number;
          bwTriosBedsBroken: number;
          bwTriosFinalKills: number;
          bwTriosKills: number;
          bwTriosWins: number;
          bwWins: number;
          cqFlagsCaptured: number;
          cqKills: number;
          cqWins: number;
          duelsKills: number;
          duelsWins: number;
          kills: number;
          mmBowKills: number;
          mmClassicKills: number;
          mmClassicWins: number;
          mmInfectionKills: number;
          mmInfectionWins: number;
          mmKills: number;
          mmKnifeKills: number;
          mmThrowKnifeKills: number;
          mmWins: number;
          msWins: number;
          scWins: number;
          sgKills: number;
          sgWins: number;
          swDoublesInsaneKills: number;
          swDoublesKills: number;
          swDoublesNormalKills: number;
          swDoublesWins: number;
          swKills: number;
          swSoloInsaneKills: number;
          swSoloKills: number;
          swSoloNormalKills: number;
          swSoloWins: number;
          swWins: number;
          tbKills: number;
          tbWins: number;
          wins: number;
        };
        dataNested: {
          bh: {
            wins: number;
          };
          bw: {
            beds: {
              broken: number;
            };
            doubles: {
              beds: {
                broken: number;
              };
              final: {
                kills: number;
              };
              kills: number;
              wins: number;
            };
            final: {
              kills: number;
            };
            kills: number;
            solo: {
              beds: {
                broken: number;
              };
              final: {
                kills: number;
              };
              kills: number;
              wins: number;
            };
            squads: {
              beds: {
                broken: number;
              };
              final: {
                kills: number;
              };
              kills: number;
              wins: number;
            };
            trios: {
              beds: {
                broken: number;
              };
              final: {
                kills: number;
              };
              kills: number;
              wins: number;
            };
            wins: number;
          };
          cq: {
            flags: {
              captured: number;
            };
            kills: number;
            wins: number;
          };
          duels: {
            kills: number;
            wins: number;
          };
          kills: number;
          mm: {
            bow: {
              kills: number;
            };
            classic: {
              kills: number;
              wins: number;
            };
            infection: {
              kills: number;
              wins: number;
            };
            kills: number;
            knife: {
              kills: number;
            };
            throw: {
              knife: {
                kills: number;
              };
            };
            wins: number;
          };
          ms: {
            wins: number;
          };
          sc: {
            wins: number;
          };
          sg: {
            kills: number;
            wins: number;
          };
          sw: {
            doubles: {
              insane: {
                kills: number;
              };
              kills: number;
              normal: {
                kills: number;
              };
              wins: number;
            };
            kills: number;
            solo: {
              insane: {
                kills: number;
              };
              kills: number;
              normal: {
                kills: number;
              };
              wins: number;
            };
            wins: number;
          };
          tb: {
            kills: number;
            wins: number;
          };
          wins: number;
        };
        timestamp: number;
      })[];
    PlayerLeaderboardBulkInput: {
      /**
       * @default global
       * @enum {string}
       */
      period?: "global" | "daily" | "weekly" | "biweekly" | "monthly" | "yearly";
      names: (string)[];
    };
    PlayerLastServerParsed: {
      region: string | null;
      serverName: string | null;
      serverNameLong: string | null;
      serverType: string | null;
      pretty: string;
    };
    PlayerFactionData: {
      tags: number;
      registerDate: string;
      coins: number;
      kills: number;
      bounty: number;
      faction: {
        id: number;
        name: string;
        strength: number;
        allies: (string)[];
        leader?: Record<string, never>;
        officers: (unknown)[];
        members: (unknown)[];
      } | null;
    };
    PlayerExtraNested: {
      bh: {
        wins: number;
      };
      bw: {
        kills: number;
        deaths: number;
        solo: {
          kills: number;
          deaths: number;
          beds: {
            broken: number;
          };
          final: {
            kills: number;
          };
          wins: number;
        };
        doubles: {
          kills: number;
          deaths: number;
          beds: {
            broken: number;
          };
          final: {
            kills: number;
          };
          wins: number;
        };
        trios: {
          kills: number;
          deaths: number;
          beds: {
            broken: number;
          };
          final: {
            kills: number;
          };
          wins: number;
        };
        squads: {
          kills: number;
          deaths: number;
          beds: {
            broken: number;
          };
          final: {
            kills: number;
          };
          wins: number;
        };
        beds: {
          broken: number;
        };
        diamonds: {
          collected: number;
        };
        emeralds: {
          collected: number;
        };
        gold: {
          collected: number;
        };
        iron: {
          collected: number;
        };
        final: {
          kills: number;
        };
        streak: number;
        best: {
          streak: number;
        };
        wins: number;
      };
      cq: {
        kills: number;
        deaths: number;
        wins: number;
        flags: {
          collected: number;
          captured: number;
          returned: number;
        };
        diamonds: {
          collected: number;
        };
        emeralds: {
          collected: number;
        };
        gold: {
          collected: number;
        };
        iron: {
          collected: number;
        };
      };
      duels: {
        kills: number;
        deaths: number;
        arrows: {
          shot: number;
        };
        melee: {
          hits: number;
        };
        streak: number;
        best: {
          streak: number;
        };
        wins: number;
        losses: number;
      };
      mm: {
        kills: number;
        deaths: number;
        classic: {
          kills: number;
          deaths: number;
          wins: number;
        };
        infection: {
          kills: number;
          deaths: number;
          wins: number;
        };
        bow: {
          kills: number;
        };
        knife: {
          kills: number;
        };
        throw: {
          knife: {
            kills: number;
          };
        };
        wins: number;
      };
      ms: {
        successes: number;
        fails: number;
        wins: number;
      };
      sc: {
        wins: number;
        goals: number;
      };
      sg: {
        kills: number;
        deaths: number;
        wins: number;
      };
      sw: {
        coins: number;
        kills: number;
        deaths: number;
        solo: {
          kills: number;
          deaths: number;
          normal: {
            kills: number;
            deaths: number;
          };
          insane: {
            kills: number;
            deaths: number;
          };
          wins: number;
          losses: number;
        };
        doubles: {
          kills: number;
          deaths: number;
          normal: {
            kills: number;
            deaths: number;
          };
          insane: {
            kills: number;
            deaths: number;
          };
          wins: number;
          losses: number;
        };
        blocks: {
          broken: number;
          placed: number;
        };
        arrows: {
          shot: number;
        };
        eggs: {
          thrown: number;
        };
        epearls: {
          thrown: number;
        };
        wins: number;
        losses: number;
      };
      tb: {
        kills: number;
        deaths: number;
        arrows: {
          shot: number;
        };
        melee: {
          hits: number;
        };
        goals: number;
        streak: number;
        best: {
          streak: number;
        };
        wins: number;
        losses: number;
      };
      tr: {
        wins: number;
        losses: number;
        streak: number;
        best: {
          streak: number;
        };
        blocks: {
          dropped: number;
        };
        time: {
          record: number;
        };
      };
      uhc: {
        kills: number;
        deaths: number;
        wins: number;
        iron: {
          mined: number;
        };
        gold: {
          mined: number;
        };
        lapis: {
          mined: number;
        };
        diamond: {
          mined: number;
        };
      };
      online: {
        time: number;
      };
      gxp: number;
    };
    PlayerExtra: {
      /** @default 0 */
      bhWins?: number;
      /** @default 0 */
      bwBedsBroken?: number;
      /** @default 0 */
      bwBestStreak?: number;
      /** @default 0 */
      bwDeaths?: number;
      /** @default 0 */
      bwDiamondsCollected?: number;
      /** @default 0 */
      bwDoublesBedsBroken?: number;
      /** @default 0 */
      bwDoublesDeaths?: number;
      /** @default 0 */
      bwDoublesFinalKills?: number;
      /** @default 0 */
      bwDoublesKills?: number;
      /** @default 0 */
      bwDoublesWins?: number;
      /** @default 0 */
      bwEmeraldsCollected?: number;
      /** @default 0 */
      bwFinalKills?: number;
      /** @default 0 */
      bwGoldCollected?: number;
      /** @default 0 */
      bwIronCollected?: number;
      /** @default 0 */
      bwKills?: number;
      /** @default 0 */
      bwSoloBedsBroken?: number;
      /** @default 0 */
      bwSoloDeaths?: number;
      /** @default 0 */
      bwSoloFinalKills?: number;
      /** @default 0 */
      bwSoloKills?: number;
      /** @default 0 */
      bwSoloWins?: number;
      /** @default 0 */
      bwSquadsBedsBroken?: number;
      /** @default 0 */
      bwSquadsDeaths?: number;
      /** @default 0 */
      bwSquadsFinalKills?: number;
      /** @default 0 */
      bwSquadsKills?: number;
      /** @default 0 */
      bwSquadsWins?: number;
      /** @default 0 */
      bwStreak?: number;
      /** @default 0 */
      bwTriosBedsBroken?: number;
      /** @default 0 */
      bwTriosDeaths?: number;
      /** @default 0 */
      bwTriosFinalKills?: number;
      /** @default 0 */
      bwTriosKills?: number;
      /** @default 0 */
      bwTriosWins?: number;
      /** @default 0 */
      bwWins?: number;
      /** @default 0 */
      cqDeaths?: number;
      /** @default 0 */
      cqDiamondsCollected?: number;
      /** @default 0 */
      cqEmeraldsCollected?: number;
      /** @default 0 */
      cqFlagsCaptured?: number;
      /** @default 0 */
      cqFlagsCollected?: number;
      /** @default 0 */
      cqFlagsReturned?: number;
      /** @default 0 */
      cqGoldCollected?: number;
      /** @default 0 */
      cqIronCollected?: number;
      /** @default 0 */
      cqKills?: number;
      /** @default 0 */
      cqWins?: number;
      /** @default 0 */
      duelsArrowsShot?: number;
      /** @default 0 */
      duelsBestStreak?: number;
      /** @default 0 */
      duelsDeaths?: number;
      /** @default 0 */
      duelsKills?: number;
      /** @default 0 */
      duelsLosses?: number;
      /** @default 0 */
      duelsMeleeHits?: number;
      /** @default 0 */
      duelsStreak?: number;
      /** @default 0 */
      duelsWins?: number;
      /** @default 0 */
      gxp?: number;
      /** @default 0 */
      mmBowKills?: number;
      /** @default 0 */
      mmClassicDeaths?: number;
      /** @default 0 */
      mmClassicKills?: number;
      /** @default 0 */
      mmClassicWins?: number;
      /** @default 0 */
      mmDeaths?: number;
      /** @default 0 */
      mmInfectionDeaths?: number;
      /** @default 0 */
      mmInfectionKills?: number;
      /** @default 0 */
      mmInfectionWins?: number;
      /** @default 0 */
      mmKills?: number;
      /** @default 0 */
      mmKnifeKills?: number;
      /** @default 0 */
      mmThrowKnifeKills?: number;
      /** @default 0 */
      mmWins?: number;
      /** @default 0 */
      msFails?: number;
      /** @default 0 */
      msSuccesses?: number;
      /** @default 0 */
      msWins?: number;
      /** @default 0 */
      onlineTime?: number;
      /** @default 0 */
      scGoals?: number;
      /** @default 0 */
      scWins?: number;
      /** @default 0 */
      sgDeaths?: number;
      /** @default 0 */
      sgKills?: number;
      /** @default 0 */
      sgWins?: number;
      /** @default 0 */
      swArrowsShot?: number;
      /** @default 0 */
      swBlocksBroken?: number;
      /** @default 0 */
      swBlocksPlaced?: number;
      /** @default 0 */
      swCoins?: number;
      /** @default 0 */
      swDeaths?: number;
      /** @default 0 */
      swDoublesDeaths?: number;
      /** @default 0 */
      swDoublesInsaneDeaths?: number;
      /** @default 0 */
      swDoublesInsaneKills?: number;
      /** @default 0 */
      swDoublesKills?: number;
      /** @default 0 */
      swDoublesLosses?: number;
      /** @default 0 */
      swDoublesNormalDeaths?: number;
      /** @default 0 */
      swDoublesNormalKills?: number;
      /** @default 0 */
      swDoublesWins?: number;
      /** @default 0 */
      swEggsThrown?: number;
      /** @default 0 */
      swEpearlsThrown?: number;
      /** @default 0 */
      swKills?: number;
      /** @default 0 */
      swLosses?: number;
      /** @default 0 */
      swSoloDeaths?: number;
      /** @default 0 */
      swSoloInsaneDeaths?: number;
      /** @default 0 */
      swSoloInsaneKills?: number;
      /** @default 0 */
      swSoloKills?: number;
      /** @default 0 */
      swSoloLosses?: number;
      /** @default 0 */
      swSoloNormalDeaths?: number;
      /** @default 0 */
      swSoloNormalKills?: number;
      /** @default 0 */
      swSoloWins?: number;
      /** @default 0 */
      swWins?: number;
      /** @default 0 */
      tbArrowsShot?: number;
      /** @default 0 */
      tbBestStreak?: number;
      /** @default 0 */
      tbDeaths?: number;
      /** @default 0 */
      tbGoals?: number;
      /** @default 0 */
      tbKills?: number;
      /** @default 0 */
      tbLosses?: number;
      /** @default 0 */
      tbMeleeHits?: number;
      /** @default 0 */
      tbStreak?: number;
      /** @default 0 */
      tbWins?: number;
      /** @default 0 */
      trBestStreak?: number;
      /** @default 0 */
      trBlocksDropped?: number;
      /** @default 0 */
      trLosses?: number;
      /** @default 0 */
      trStreak?: number;
      /** @default 0 */
      trTimeRecord?: number;
      /** @default 0 */
      trWins?: number;
      /** @default 0 */
      uhcDeaths?: number;
      /** @default 0 */
      uhcDiamondMined?: number;
      /** @default 0 */
      uhcGoldMined?: number;
      /** @default 0 */
      uhcIronMined?: number;
      /** @default 0 */
      uhcKills?: number;
      /** @default 0 */
      uhcLapisMined?: number;
      /** @default 0 */
      uhcWins?: number;
    };
    PlayerDiscordData: {
      claim?: string;
      latest?: string;
    };
    PlayerCountResponse: {
      count: number;
    };
    PlayerBulkResponse: ({
        xuid: string;
        name: string;
        /** Format: uri */
        avatar: string;
        avatarBlurhash?: string;
        /** Format: uri */
        skin: string;
        online?: boolean;
        flags: number;
        /** @enum {number} */
        dmStatus: 0 | 1 | 2;
        bio: string;
        discordId: string | null;
        discordTag: string | null;
        guild: string | null;
        ranks: ("Admin" | "Dev" | "Supervisor" | "Mod" | "Crew" | "Trainee" | "Builder" | "Designer" | "Game Designer" | "Media" | "Discord" | "Partner" | "Titan" | "Legend" | "Emerald" | "Ultra" | "Youtube" | "Tester")[];
        /** @enum {string|null} */
        tier: "Silver" | "Gold" | "Guardian" | "Eagle" | "Elite" | null;
        banned?: boolean;
        bannedUntil?: number | null;
        muted?: boolean;
        mutedUntil?: number | null;
        staff: boolean;
        titan: boolean;
        /** Format: date-time */
        titanUntil: string | null;
        /** Format: date-time */
        lastRankTimestamp: string | null;
        /** @enum {number} */
        voteStatus?: 0 | 1 | 2;
        firstJoin: string | null;
        firstJoined: number;
        lastJoin: string | null;
        lastJoined: number;
        lastQuit: number;
        lastSeen: string | null;
        lastServer: string;
        crateKeys: number;
        credits: number;
        deaths?: number;
        deathsTotal?: number;
        kdr?: number;
        kdrTotal?: number;
        kills?: number;
        killsTotal?: number;
        level: number;
        losses?: number;
        wins?: number;
        wlr?: number;
        xp: number;
        formattedLevel: string;
        levelColors: ("#000000" | "#0000aa" | "#00aa00" | "#00aaaa" | "#aa0000" | "#aa00aa" | "#ffaa00" | "#aaaaaa" | "#555555" | "#5555ff" | "#55ff55" | "#55ffff" | "#ff5555" | "#ff55ff" | "#ffff55" | "#ffffff" | "#ddd605")[];
        /** @enum {string} */
        levelFormat: "§k" | "§l" | "§o" | "§r";
        rankColors: (string)[];
        skinVisibility: boolean;
        tierColor: string | null;
        youtubeChannelUrl: string | null;
        killsUntilNextKdr?: number;
        winsUntilNextWlr?: number;
        xpToNextLevel: number;
        discoveredTokens: (string)[];
        discoveredZones: (string)[];
        factionData?: ({
          tags: number;
          registerDate: string;
          coins: number;
          kills: number;
          bounty: number;
          faction: {
            id: number;
            name: string;
            strength: number;
            allies: (string)[];
            leader?: Record<string, never>;
            officers: (unknown)[];
            members: (unknown)[];
          } | null;
        }) | null;
        guildData?: ({
          id: number;
          name: string;
          maxSize: number;
          memberCount: number;
          motd: string;
          position?: number;
          rawTag: string;
          tag: string | null;
          /** @enum {string|null} */
          tagColor: "#000000" | "#0000aa" | "#00aa00" | "#00aaaa" | "#aa0000" | "#aa00aa" | "#ffaa00" | "#aaaaaa" | "#555555" | "#5555ff" | "#55ff55" | "#55ffff" | "#ff5555" | "#ff55ff" | "#ffff55" | "#ffffff" | "#ddd605" | null;
          xp: number;
          xpToNextLevel: number;
          level: number;
          leader?: Record<string, never>;
          officers: (unknown)[];
          members: (unknown)[];
          discordInvite: string | null;
          discordId: string | null;
        }) | null;
        lastServerParsed: {
          region: string | null;
          serverName: string | null;
          serverNameLong: string | null;
          serverType: string | null;
          pretty: string;
        };
        punishmentsNew?: ({
            id: string;
            /** @description The punishment `reasonName` and `reasonCategory` joined together. */
            reason: string;
            reasonName: string;
            reasonCategory: string;
            /** @enum {string} */
            type: "BAN" | "MUTE";
            /** @description If true, the punishment does not expire. */
            permanent: boolean;
            /** @description For migration punishments, this value is 0. */
            issuedAt: number;
            /** @description If `permanent` is true, this value is -1. */
            validUntil: number;
            /** @description Whether this punishment is currently active. */
            active: boolean;
            /** @description The XUIDs affected by this punishment. */
            affectedXuids: (string)[];
            /** @description The corresponding player names to `affectedXuids`. */
            affectedPlayers: (string)[];
            alt: boolean;
          })[];
        skinData?: {
          skin: boolean;
          /** @enum {string} */
          skinType: "steve" | "alex";
          skinVisibility: boolean;
          base64: string;
          raw: string | null;
        };
        winsData?: {
          /** @default 0 */
          BH?: number;
          /** @default 0 */
          BW?: number;
          /** @default 0 */
          CQ?: number;
          /** @default 0 */
          Duels?: number;
          /** @default 0 */
          MM?: number;
          /** @default 0 */
          MS?: number;
          /** @default 0 */
          SC?: number;
          /** @default 0 */
          SG?: number;
          /** @default 0 */
          SW?: number;
          /** @default 0 */
          TB?: number;
          /** @default 0 */
          TR?: number;
          /** @default 0 */
          UHC?: number;
        };
        extra?: {
          /** @default 0 */
          bhWins?: number;
          /** @default 0 */
          bwBedsBroken?: number;
          /** @default 0 */
          bwBestStreak?: number;
          /** @default 0 */
          bwDeaths?: number;
          /** @default 0 */
          bwDiamondsCollected?: number;
          /** @default 0 */
          bwDoublesBedsBroken?: number;
          /** @default 0 */
          bwDoublesDeaths?: number;
          /** @default 0 */
          bwDoublesFinalKills?: number;
          /** @default 0 */
          bwDoublesKills?: number;
          /** @default 0 */
          bwDoublesWins?: number;
          /** @default 0 */
          bwEmeraldsCollected?: number;
          /** @default 0 */
          bwFinalKills?: number;
          /** @default 0 */
          bwGoldCollected?: number;
          /** @default 0 */
          bwIronCollected?: number;
          /** @default 0 */
          bwKills?: number;
          /** @default 0 */
          bwSoloBedsBroken?: number;
          /** @default 0 */
          bwSoloDeaths?: number;
          /** @default 0 */
          bwSoloFinalKills?: number;
          /** @default 0 */
          bwSoloKills?: number;
          /** @default 0 */
          bwSoloWins?: number;
          /** @default 0 */
          bwSquadsBedsBroken?: number;
          /** @default 0 */
          bwSquadsDeaths?: number;
          /** @default 0 */
          bwSquadsFinalKills?: number;
          /** @default 0 */
          bwSquadsKills?: number;
          /** @default 0 */
          bwSquadsWins?: number;
          /** @default 0 */
          bwStreak?: number;
          /** @default 0 */
          bwTriosBedsBroken?: number;
          /** @default 0 */
          bwTriosDeaths?: number;
          /** @default 0 */
          bwTriosFinalKills?: number;
          /** @default 0 */
          bwTriosKills?: number;
          /** @default 0 */
          bwTriosWins?: number;
          /** @default 0 */
          bwWins?: number;
          /** @default 0 */
          cqDeaths?: number;
          /** @default 0 */
          cqDiamondsCollected?: number;
          /** @default 0 */
          cqEmeraldsCollected?: number;
          /** @default 0 */
          cqFlagsCaptured?: number;
          /** @default 0 */
          cqFlagsCollected?: number;
          /** @default 0 */
          cqFlagsReturned?: number;
          /** @default 0 */
          cqGoldCollected?: number;
          /** @default 0 */
          cqIronCollected?: number;
          /** @default 0 */
          cqKills?: number;
          /** @default 0 */
          cqWins?: number;
          /** @default 0 */
          duelsArrowsShot?: number;
          /** @default 0 */
          duelsBestStreak?: number;
          /** @default 0 */
          duelsDeaths?: number;
          /** @default 0 */
          duelsKills?: number;
          /** @default 0 */
          duelsLosses?: number;
          /** @default 0 */
          duelsMeleeHits?: number;
          /** @default 0 */
          duelsStreak?: number;
          /** @default 0 */
          duelsWins?: number;
          /** @default 0 */
          gxp?: number;
          /** @default 0 */
          mmBowKills?: number;
          /** @default 0 */
          mmClassicDeaths?: number;
          /** @default 0 */
          mmClassicKills?: number;
          /** @default 0 */
          mmClassicWins?: number;
          /** @default 0 */
          mmDeaths?: number;
          /** @default 0 */
          mmInfectionDeaths?: number;
          /** @default 0 */
          mmInfectionKills?: number;
          /** @default 0 */
          mmInfectionWins?: number;
          /** @default 0 */
          mmKills?: number;
          /** @default 0 */
          mmKnifeKills?: number;
          /** @default 0 */
          mmThrowKnifeKills?: number;
          /** @default 0 */
          mmWins?: number;
          /** @default 0 */
          msFails?: number;
          /** @default 0 */
          msSuccesses?: number;
          /** @default 0 */
          msWins?: number;
          /** @default 0 */
          onlineTime?: number;
          /** @default 0 */
          scGoals?: number;
          /** @default 0 */
          scWins?: number;
          /** @default 0 */
          sgDeaths?: number;
          /** @default 0 */
          sgKills?: number;
          /** @default 0 */
          sgWins?: number;
          /** @default 0 */
          swArrowsShot?: number;
          /** @default 0 */
          swBlocksBroken?: number;
          /** @default 0 */
          swBlocksPlaced?: number;
          /** @default 0 */
          swCoins?: number;
          /** @default 0 */
          swDeaths?: number;
          /** @default 0 */
          swDoublesDeaths?: number;
          /** @default 0 */
          swDoublesInsaneDeaths?: number;
          /** @default 0 */
          swDoublesInsaneKills?: number;
          /** @default 0 */
          swDoublesKills?: number;
          /** @default 0 */
          swDoublesLosses?: number;
          /** @default 0 */
          swDoublesNormalDeaths?: number;
          /** @default 0 */
          swDoublesNormalKills?: number;
          /** @default 0 */
          swDoublesWins?: number;
          /** @default 0 */
          swEggsThrown?: number;
          /** @default 0 */
          swEpearlsThrown?: number;
          /** @default 0 */
          swKills?: number;
          /** @default 0 */
          swLosses?: number;
          /** @default 0 */
          swSoloDeaths?: number;
          /** @default 0 */
          swSoloInsaneDeaths?: number;
          /** @default 0 */
          swSoloInsaneKills?: number;
          /** @default 0 */
          swSoloKills?: number;
          /** @default 0 */
          swSoloLosses?: number;
          /** @default 0 */
          swSoloNormalDeaths?: number;
          /** @default 0 */
          swSoloNormalKills?: number;
          /** @default 0 */
          swSoloWins?: number;
          /** @default 0 */
          swWins?: number;
          /** @default 0 */
          tbArrowsShot?: number;
          /** @default 0 */
          tbBestStreak?: number;
          /** @default 0 */
          tbDeaths?: number;
          /** @default 0 */
          tbGoals?: number;
          /** @default 0 */
          tbKills?: number;
          /** @default 0 */
          tbLosses?: number;
          /** @default 0 */
          tbMeleeHits?: number;
          /** @default 0 */
          tbStreak?: number;
          /** @default 0 */
          tbWins?: number;
          /** @default 0 */
          trBestStreak?: number;
          /** @default 0 */
          trBlocksDropped?: number;
          /** @default 0 */
          trLosses?: number;
          /** @default 0 */
          trStreak?: number;
          /** @default 0 */
          trTimeRecord?: number;
          /** @default 0 */
          trWins?: number;
          /** @default 0 */
          uhcDeaths?: number;
          /** @default 0 */
          uhcDiamondMined?: number;
          /** @default 0 */
          uhcGoldMined?: number;
          /** @default 0 */
          uhcIronMined?: number;
          /** @default 0 */
          uhcKills?: number;
          /** @default 0 */
          uhcLapisMined?: number;
          /** @default 0 */
          uhcWins?: number;
        };
        extraNested?: {
          bh: {
            wins: number;
          };
          bw: {
            kills: number;
            deaths: number;
            solo: {
              kills: number;
              deaths: number;
              beds: {
                broken: number;
              };
              final: {
                kills: number;
              };
              wins: number;
            };
            doubles: {
              kills: number;
              deaths: number;
              beds: {
                broken: number;
              };
              final: {
                kills: number;
              };
              wins: number;
            };
            trios: {
              kills: number;
              deaths: number;
              beds: {
                broken: number;
              };
              final: {
                kills: number;
              };
              wins: number;
            };
            squads: {
              kills: number;
              deaths: number;
              beds: {
                broken: number;
              };
              final: {
                kills: number;
              };
              wins: number;
            };
            beds: {
              broken: number;
            };
            diamonds: {
              collected: number;
            };
            emeralds: {
              collected: number;
            };
            gold: {
              collected: number;
            };
            iron: {
              collected: number;
            };
            final: {
              kills: number;
            };
            streak: number;
            best: {
              streak: number;
            };
            wins: number;
          };
          cq: {
            kills: number;
            deaths: number;
            wins: number;
            flags: {
              collected: number;
              captured: number;
              returned: number;
            };
            diamonds: {
              collected: number;
            };
            emeralds: {
              collected: number;
            };
            gold: {
              collected: number;
            };
            iron: {
              collected: number;
            };
          };
          duels: {
            kills: number;
            deaths: number;
            arrows: {
              shot: number;
            };
            melee: {
              hits: number;
            };
            streak: number;
            best: {
              streak: number;
            };
            wins: number;
            losses: number;
          };
          mm: {
            kills: number;
            deaths: number;
            classic: {
              kills: number;
              deaths: number;
              wins: number;
            };
            infection: {
              kills: number;
              deaths: number;
              wins: number;
            };
            bow: {
              kills: number;
            };
            knife: {
              kills: number;
            };
            throw: {
              knife: {
                kills: number;
              };
            };
            wins: number;
          };
          ms: {
            successes: number;
            fails: number;
            wins: number;
          };
          sc: {
            wins: number;
            goals: number;
          };
          sg: {
            kills: number;
            deaths: number;
            wins: number;
          };
          sw: {
            coins: number;
            kills: number;
            deaths: number;
            solo: {
              kills: number;
              deaths: number;
              normal: {
                kills: number;
                deaths: number;
              };
              insane: {
                kills: number;
                deaths: number;
              };
              wins: number;
              losses: number;
            };
            doubles: {
              kills: number;
              deaths: number;
              normal: {
                kills: number;
                deaths: number;
              };
              insane: {
                kills: number;
                deaths: number;
              };
              wins: number;
              losses: number;
            };
            blocks: {
              broken: number;
              placed: number;
            };
            arrows: {
              shot: number;
            };
            eggs: {
              thrown: number;
            };
            epearls: {
              thrown: number;
            };
            wins: number;
            losses: number;
          };
          tb: {
            kills: number;
            deaths: number;
            arrows: {
              shot: number;
            };
            melee: {
              hits: number;
            };
            goals: number;
            streak: number;
            best: {
              streak: number;
            };
            wins: number;
            losses: number;
          };
          tr: {
            wins: number;
            losses: number;
            streak: number;
            best: {
              streak: number;
            };
            blocks: {
              dropped: number;
            };
            time: {
              record: number;
            };
          };
          uhc: {
            kills: number;
            deaths: number;
            wins: number;
            iron: {
              mined: number;
            };
            gold: {
              mined: number;
            };
            lapis: {
              mined: number;
            };
            diamond: {
              mined: number;
            };
          };
          online: {
            time: number;
          };
          gxp: number;
        };
        leaderboard: boolean;
        /** @deprecated use `credits` instead. */
        statusCredits: number;
      })[];
    PlayerBulkInput: {
      /** @default false */
      expand?: boolean;
      /** @default true */
      withFactionData?: boolean;
      /** @default false */
      withGuildData?: boolean;
      /** @default true */
      withOnline?: boolean;
      /** @default true */
      withPunishments?: boolean;
      /** @default false */
      withSkinData?: boolean;
      /** @default true */
      withStats?: boolean;
      /** @default true */
      withVoteStatus?: boolean;
      /** @default false */
      withAvatarBlurhash?: boolean;
      /**
       * @default global
       * @enum {string}
       */
      period?: "global" | "daily" | "weekly" | "biweekly" | "monthly" | "yearly";
      names: (string)[];
    };
    LeaderboardResponseXP: {
      xuid: string;
      player: string;
      xp: number;
      xpToNextLevel: number;
      level: number;
      /** @enum {string|null} */
      topRank: "Admin" | "Dev" | "Supervisor" | "Mod" | "Crew" | "Trainee" | "Builder" | "Designer" | "Game Designer" | "Media" | "Discord" | "Partner" | "Titan" | "Legend" | "Emerald" | "Ultra" | "Youtube" | "Tester" | null;
    };
    LeaderboardResponseWLR: {
      xuid: string;
      player: string;
      wlr: number;
      winsUntilNextWlr: number;
      /** @enum {string|null} */
      topRank: "Admin" | "Dev" | "Supervisor" | "Mod" | "Crew" | "Trainee" | "Builder" | "Designer" | "Game Designer" | "Media" | "Discord" | "Partner" | "Titan" | "Legend" | "Emerald" | "Ultra" | "Youtube" | "Tester" | null;
    };
    LeaderboardResponseWins: {
      xuid: string;
      player: string;
      wins: number;
      /** @enum {string|null} */
      topRank: "Admin" | "Dev" | "Supervisor" | "Mod" | "Crew" | "Trainee" | "Builder" | "Designer" | "Game Designer" | "Media" | "Discord" | "Partner" | "Titan" | "Legend" | "Emerald" | "Ultra" | "Youtube" | "Tester" | null;
    };
    LeaderboardResponseVoters: {
      nickname: string;
      votes: number;
    };
    LeaderboardResponsePlaytime: {
      xuid: string;
      player: string;
      onlineTime: number;
      /** @enum {string|null} */
      topRank: "Admin" | "Dev" | "Supervisor" | "Mod" | "Crew" | "Trainee" | "Builder" | "Designer" | "Game Designer" | "Media" | "Discord" | "Partner" | "Titan" | "Legend" | "Emerald" | "Ultra" | "Youtube" | "Tester" | null;
    };
    LeaderboardResponseParkour: {
      xuid: string;
      name: string;
      time: number;
      /** @enum {string|null} */
      topRank: "Admin" | "Dev" | "Supervisor" | "Mod" | "Crew" | "Trainee" | "Builder" | "Designer" | "Game Designer" | "Media" | "Discord" | "Partner" | "Titan" | "Legend" | "Emerald" | "Ultra" | "Youtube" | "Tester" | null;
    };
    LeaderboardResponseOldest: {
      xuid: string;
      player: string;
      joinedAt: number;
      /** @enum {string|null} */
      topRank: "Admin" | "Dev" | "Supervisor" | "Mod" | "Crew" | "Trainee" | "Builder" | "Designer" | "Game Designer" | "Media" | "Discord" | "Partner" | "Titan" | "Legend" | "Emerald" | "Ultra" | "Youtube" | "Tester" | null;
    };
    LeaderboardResponseMapVotes: {
      gameMode: string;
      mapName: string;
      votes: number;
      votesDailyAvg: number;
    };
    LeaderboardResponseKills: {
      xuid: string;
      player: string;
      kills: number;
      /** @enum {string|null} */
      topRank: "Admin" | "Dev" | "Supervisor" | "Mod" | "Crew" | "Trainee" | "Builder" | "Designer" | "Game Designer" | "Media" | "Discord" | "Partner" | "Titan" | "Legend" | "Emerald" | "Ultra" | "Youtube" | "Tester" | null;
    };
    LeaderboardResponseKDR: {
      xuid: string;
      player: string;
      kdr: number;
      killsUntilNextKdr: number;
      /** @enum {string|null} */
      topRank: "Admin" | "Dev" | "Supervisor" | "Mod" | "Crew" | "Trainee" | "Builder" | "Designer" | "Game Designer" | "Media" | "Discord" | "Partner" | "Titan" | "Legend" | "Emerald" | "Ultra" | "Youtube" | "Tester" | null;
    };
    LeaderboardResponseGuilds: {
      name: string;
      leader: string;
      xp: number;
      xpToNextLevel: number;
      level: number;
      earnedXp?: number;
    };
    LeaderboardResponseGame: {
      xuid: string;
      player: string;
      value: number;
      /** @enum {string|null} */
      topRank: "Admin" | "Dev" | "Supervisor" | "Mod" | "Crew" | "Trainee" | "Builder" | "Designer" | "Game Designer" | "Media" | "Discord" | "Partner" | "Titan" | "Legend" | "Emerald" | "Ultra" | "Youtube" | "Tester" | null;
    };
    LeaderboardResponseFactions: {
      name: string;
      leader: string;
      strength: number;
    } | {
      xuid: string;
      player: string;
      kills: number;
      coins: number;
      bounty: number;
      streak: number;
      bestStreak: number;
      xp: number;
      xpToNextLevel: number;
      level: number;
    };
    LeaderboardResponseCredits: {
      xuid: string;
      player: string;
      credits: number;
      /** @enum {string|null} */
      topRank: "Admin" | "Dev" | "Supervisor" | "Mod" | "Crew" | "Trainee" | "Builder" | "Designer" | "Game Designer" | "Media" | "Discord" | "Partner" | "Titan" | "Legend" | "Emerald" | "Ultra" | "Youtube" | "Tester" | null;
    };
    LeaderboardResponseCrateKeys: {
      xuid: string;
      player: string;
      crateKeys: number;
      /** @enum {string|null} */
      topRank: "Admin" | "Dev" | "Supervisor" | "Mod" | "Crew" | "Trainee" | "Builder" | "Designer" | "Game Designer" | "Media" | "Discord" | "Partner" | "Titan" | "Legend" | "Emerald" | "Ultra" | "Youtube" | "Tester" | null;
    };
    LeaderboardResponse: (({
        xuid: string;
        player: string;
        crateKeys: number;
        /** @enum {string|null} */
        topRank: "Admin" | "Dev" | "Supervisor" | "Mod" | "Crew" | "Trainee" | "Builder" | "Designer" | "Game Designer" | "Media" | "Discord" | "Partner" | "Titan" | "Legend" | "Emerald" | "Ultra" | "Youtube" | "Tester" | null;
      })[]) | (({
        xuid: string;
        player: string;
        credits: number;
        /** @enum {string|null} */
        topRank: "Admin" | "Dev" | "Supervisor" | "Mod" | "Crew" | "Trainee" | "Builder" | "Designer" | "Game Designer" | "Media" | "Discord" | "Partner" | "Titan" | "Legend" | "Emerald" | "Ultra" | "Youtube" | "Tester" | null;
      })[]) | (({
        name: string;
        leader: string;
        strength: number;
      } | {
        xuid: string;
        player: string;
        kills: number;
        coins: number;
        bounty: number;
        streak: number;
        bestStreak: number;
        xp: number;
        xpToNextLevel: number;
        level: number;
      })[]) | (({
        xuid: string;
        player: string;
        value: number;
        /** @enum {string|null} */
        topRank: "Admin" | "Dev" | "Supervisor" | "Mod" | "Crew" | "Trainee" | "Builder" | "Designer" | "Game Designer" | "Media" | "Discord" | "Partner" | "Titan" | "Legend" | "Emerald" | "Ultra" | "Youtube" | "Tester" | null;
      })[]) | ({
        name: string;
        leader: string;
        xp: number;
        xpToNextLevel: number;
        level: number;
        earnedXp?: number;
      })[] | (({
        xuid: string;
        player: string;
        kdr: number;
        killsUntilNextKdr: number;
        /** @enum {string|null} */
        topRank: "Admin" | "Dev" | "Supervisor" | "Mod" | "Crew" | "Trainee" | "Builder" | "Designer" | "Game Designer" | "Media" | "Discord" | "Partner" | "Titan" | "Legend" | "Emerald" | "Ultra" | "Youtube" | "Tester" | null;
      })[]) | (({
        xuid: string;
        player: string;
        kills: number;
        /** @enum {string|null} */
        topRank: "Admin" | "Dev" | "Supervisor" | "Mod" | "Crew" | "Trainee" | "Builder" | "Designer" | "Game Designer" | "Media" | "Discord" | "Partner" | "Titan" | "Legend" | "Emerald" | "Ultra" | "Youtube" | "Tester" | null;
      })[]) | ({
        gameMode: string;
        mapName: string;
        votes: number;
        votesDailyAvg: number;
      })[] | (({
        xuid: string;
        player: string;
        joinedAt: number;
        /** @enum {string|null} */
        topRank: "Admin" | "Dev" | "Supervisor" | "Mod" | "Crew" | "Trainee" | "Builder" | "Designer" | "Game Designer" | "Media" | "Discord" | "Partner" | "Titan" | "Legend" | "Emerald" | "Ultra" | "Youtube" | "Tester" | null;
      })[]) | (({
        xuid: string;
        name: string;
        time: number;
        /** @enum {string|null} */
        topRank: "Admin" | "Dev" | "Supervisor" | "Mod" | "Crew" | "Trainee" | "Builder" | "Designer" | "Game Designer" | "Media" | "Discord" | "Partner" | "Titan" | "Legend" | "Emerald" | "Ultra" | "Youtube" | "Tester" | null;
      })[]) | (({
        xuid: string;
        player: string;
        onlineTime: number;
        /** @enum {string|null} */
        topRank: "Admin" | "Dev" | "Supervisor" | "Mod" | "Crew" | "Trainee" | "Builder" | "Designer" | "Game Designer" | "Media" | "Discord" | "Partner" | "Titan" | "Legend" | "Emerald" | "Ultra" | "Youtube" | "Tester" | null;
      })[]) | ({
        nickname: string;
        votes: number;
      })[] | (({
        xuid: string;
        player: string;
        wins: number;
        /** @enum {string|null} */
        topRank: "Admin" | "Dev" | "Supervisor" | "Mod" | "Crew" | "Trainee" | "Builder" | "Designer" | "Game Designer" | "Media" | "Discord" | "Partner" | "Titan" | "Legend" | "Emerald" | "Ultra" | "Youtube" | "Tester" | null;
      })[]) | (({
        xuid: string;
        player: string;
        wlr: number;
        winsUntilNextWlr: number;
        /** @enum {string|null} */
        topRank: "Admin" | "Dev" | "Supervisor" | "Mod" | "Crew" | "Trainee" | "Builder" | "Designer" | "Game Designer" | "Media" | "Discord" | "Partner" | "Titan" | "Legend" | "Emerald" | "Ultra" | "Youtube" | "Tester" | null;
      })[]) | (({
        xuid: string;
        player: string;
        xp: number;
        xpToNextLevel: number;
        level: number;
        /** @enum {string|null} */
        topRank: "Admin" | "Dev" | "Supervisor" | "Mod" | "Crew" | "Trainee" | "Builder" | "Designer" | "Game Designer" | "Media" | "Discord" | "Partner" | "Titan" | "Legend" | "Emerald" | "Ultra" | "Youtube" | "Tester" | null;
      })[]);
    LeaderboardQuery: {
      /** @default 100 */
      limit?: number;
      /** @enum {string} */
      type: "crateKeys" | "credits" | "factions" | "game" | "guilds" | "kdr" | "kills" | "mapVotes" | "oldest" | "parkour" | "playtime" | "voters" | "wins" | "wlr" | "xp";
      /** @enum {string} */
      column?: "bh_wins" | "bw_beds_broken" | "bw_doubles_beds_broken" | "bw_doubles_final_kills" | "bw_doubles_kills" | "bw_doubles_wins" | "bw_final_kills" | "bw_kills" | "bw_solo_beds_broken" | "bw_solo_final_kills" | "bw_solo_kills" | "bw_solo_wins" | "bw_squads_beds_broken" | "bw_squads_final_kills" | "bw_squads_kills" | "bw_squads_wins" | "bw_trios_beds_broken" | "bw_trios_final_kills" | "bw_trios_kills" | "bw_trios_wins" | "bw_wins" | "cq_flags_captured" | "cq_kills" | "cq_wins" | "duels_kills" | "duels_wins" | "kills" | "mm_bow_kills" | "mm_classic_kills" | "mm_classic_wins" | "mm_infection_kills" | "mm_infection_wins" | "mm_kills" | "mm_knife_kills" | "mm_throw_knife_kills" | "mm_wins" | "ms_wins" | "sc_wins" | "sg_kills" | "sg_wins" | "sw_doubles_insane_kills" | "sw_doubles_kills" | "sw_doubles_normal_kills" | "sw_doubles_wins" | "sw_kills" | "sw_solo_insane_kills" | "sw_solo_kills" | "sw_solo_normal_kills" | "sw_solo_wins" | "sw_wins" | "tb_kills" | "tb_wins" | "uhc_kills" | "uhc_wins" | "wins";
      /** @enum {string} */
      scope?: "bestStreak" | "kills" | "streak";
      /** @enum {string} */
      kdrPrefix?: "bw_doubles" | "bw" | "bw_solo" | "bw_squads" | "bw_trios" | "cq" | "duels" | "mm_classic" | "mm_infection" | "mm" | "sg" | "sw_doubles_insane" | "sw_doubles" | "sw_doubles_normal" | "sw" | "sw_solo_insane" | "sw_solo" | "sw_solo_normal" | "tb" | "uhc";
      /** @enum {string} */
      wlrPrefix?: "duels" | "sw_doubles" | "sw_solo" | "sw" | "tb";
      /**
       * @default global
       * @enum {string}
       */
      period?: "global" | "daily" | "weekly" | "biweekly" | "monthly" | "yearly";
      /** @enum {string} */
      gameMode?: "bh" | "bw" | "cq" | "duels" | "mm" | "ms" | "sc" | "sg" | "sw" | "tb" | "uhc";
      /**
       * @default current
       * @enum {string}
       */
      month?: "current" | "previous";
      after?: number;
    };
    LeaderboardBulkResponse: (unknown)[];
    LeaderboardBulkInput: ({
        /** @default 100 */
        limit?: number;
        /** @enum {string} */
        type: "crateKeys" | "credits" | "factions" | "game" | "guilds" | "kdr" | "kills" | "mapVotes" | "oldest" | "parkour" | "playtime" | "voters" | "wins" | "wlr" | "xp";
        /** @enum {string} */
        column?: "bh_wins" | "bw_beds_broken" | "bw_doubles_beds_broken" | "bw_doubles_final_kills" | "bw_doubles_kills" | "bw_doubles_wins" | "bw_final_kills" | "bw_kills" | "bw_solo_beds_broken" | "bw_solo_final_kills" | "bw_solo_kills" | "bw_solo_wins" | "bw_squads_beds_broken" | "bw_squads_final_kills" | "bw_squads_kills" | "bw_squads_wins" | "bw_trios_beds_broken" | "bw_trios_final_kills" | "bw_trios_kills" | "bw_trios_wins" | "bw_wins" | "cq_flags_captured" | "cq_kills" | "cq_wins" | "duels_kills" | "duels_wins" | "kills" | "mm_bow_kills" | "mm_classic_kills" | "mm_classic_wins" | "mm_infection_kills" | "mm_infection_wins" | "mm_kills" | "mm_knife_kills" | "mm_throw_knife_kills" | "mm_wins" | "ms_wins" | "sc_wins" | "sg_kills" | "sg_wins" | "sw_doubles_insane_kills" | "sw_doubles_kills" | "sw_doubles_normal_kills" | "sw_doubles_wins" | "sw_kills" | "sw_solo_insane_kills" | "sw_solo_kills" | "sw_solo_normal_kills" | "sw_solo_wins" | "sw_wins" | "tb_kills" | "tb_wins" | "uhc_kills" | "uhc_wins" | "wins";
        /** @enum {string} */
        scope?: "bestStreak" | "kills" | "streak";
        /** @enum {string} */
        kdrPrefix?: "bw_doubles" | "bw" | "bw_solo" | "bw_squads" | "bw_trios" | "cq" | "duels" | "mm_classic" | "mm_infection" | "mm" | "sg" | "sw_doubles_insane" | "sw_doubles" | "sw_doubles_normal" | "sw" | "sw_solo_insane" | "sw_solo" | "sw_solo_normal" | "tb" | "uhc";
        /** @enum {string} */
        wlrPrefix?: "duels" | "sw_doubles" | "sw_solo" | "sw" | "tb";
        /**
         * @default global
         * @enum {string}
         */
        period?: "global" | "daily" | "weekly" | "biweekly" | "monthly" | "yearly";
        /** @enum {string} */
        gameMode?: "bh" | "bw" | "cq" | "duels" | "mm" | "ms" | "sc" | "sg" | "sw" | "tb" | "uhc";
        /**
         * @default current
         * @enum {string}
         */
        month?: "current" | "previous";
      })[];
    GuildResponse: {
      id: number;
      name: string;
      maxSize: number;
      memberCount: number;
      motd: string;
      position?: number;
      rawTag: string;
      tag: string | null;
      /** @enum {string|null} */
      tagColor: "#000000" | "#0000aa" | "#00aa00" | "#00aaaa" | "#aa0000" | "#aa00aa" | "#ffaa00" | "#aaaaaa" | "#555555" | "#5555ff" | "#55ff55" | "#55ffff" | "#ff5555" | "#ff55ff" | "#ffff55" | "#ffffff" | "#ddd605" | null;
      xp: number;
      xpToNextLevel: number;
      level: number;
      leader?: Record<string, never>;
      officers: (unknown)[];
      members: (unknown)[];
      discordInvite: string | null;
      discordId: string | null;
    };
    GuildQuery: {
      /** @default false */
      expand?: boolean;
      /** @default true */
      withOnline?: boolean;
      /** @default false */
      withSkinData?: boolean;
      /** @default false */
      withStats?: boolean;
      /** @default false */
      withVoteStatus?: boolean;
    };
    GuildBulkResponse: ({
        id: number;
        name: string;
        maxSize: number;
        memberCount: number;
        motd: string;
        position?: number;
        rawTag: string;
        tag: string | null;
        /** @enum {string|null} */
        tagColor: "#000000" | "#0000aa" | "#00aa00" | "#00aaaa" | "#aa0000" | "#aa00aa" | "#ffaa00" | "#aaaaaa" | "#555555" | "#5555ff" | "#55ff55" | "#55ffff" | "#ff5555" | "#ff55ff" | "#ffff55" | "#ffffff" | "#ddd605" | null;
        xp: number;
        xpToNextLevel: number;
        level: number;
        leader?: Record<string, never>;
        officers: (unknown)[];
        members: (unknown)[];
        discordInvite: string | null;
        discordId: string | null;
      })[];
    GuildBulkInput: {
      /** @default false */
      expand?: boolean;
      /** @default true */
      withOnline?: boolean;
      /** @default false */
      withSkinData?: boolean;
      /** @default false */
      withStats?: boolean;
      /** @default false */
      withVoteStatus?: boolean;
      names: (string)[];
    };
    FactionResponse: {
      id: number;
      name: string;
      strength: number;
      allies: (string)[];
      leader?: Record<string, never>;
      officers: (unknown)[];
      members: (unknown)[];
    };
    FactionBulkResponse: ({
        id: number;
        name: string;
        strength: number;
        allies: (string)[];
        leader?: Record<string, never>;
        officers: (unknown)[];
        members: (unknown)[];
      })[];
    DiscordCountResponse: {
      members: number;
    };
    AnnouncementsResponse: (unknown)[];
    AnnouncementsQuery: {
      /** @default 100 */
      limit?: number;
      /** @enum {string} */
      type: "board" | "bossbar" | "discord" | "message" | "title";
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export interface operations {

  "Get Announcements": {
    parameters: {
      query: {
        limit?: number;
        type: "board" | "bossbar" | "discord" | "message" | "title";
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          "application/json": components["schemas"]["AnnouncementsResponse"];
        };
      };
    };
  };
  "Get Discord Member Count": {
    responses: {
      /** @description Default Response */
      200: {
        content: {
          "application/json": components["schemas"]["DiscordCountResponse"];
        };
      };
    };
  };
  "Get Faction": {
    parameters?: {
      query?: {
        expand?: boolean;
        withOnline?: boolean;
        withSkinData?: boolean;
        withStats?: boolean;
        withVoteStatus?: boolean;
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          "application/json": components["schemas"]["FactionResponse"];
        };
      };
    };
  };
  "Get Factions": {
    parameters?: {
      query?: {
        expand?: boolean;
        withStats?: boolean;
        first?: number;
        after?: string;
        last?: number;
        before?: string;
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          "application/json": components["schemas"]["RelayPaginationResponse"];
        };
      };
    };
  };
  "Bulk Get Factions": {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["GuildBulkInput"];
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          "application/json": components["schemas"]["FactionBulkResponse"];
        };
      };
    };
  };
  "Get Faction Status": {
    /** @description Determine if given faction name or ID exists. */
    responses: {
      /** @description Default Response */
      200: {
        content: {
          "application/json": components["schemas"]["PlayerStatusResponse"];
        };
      };
    };
  };
  "Get Guild": {
    parameters?: {
      query?: {
        expand?: boolean;
        withOnline?: boolean;
        withSkinData?: boolean;
        withStats?: boolean;
        withVoteStatus?: boolean;
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          "application/json": components["schemas"]["GuildResponse"];
        };
      };
    };
  };
  "Get Guilds": {
    parameters?: {
      query?: {
        expand?: boolean;
        withStats?: boolean;
        first?: number;
        after?: string;
        last?: number;
        before?: string;
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          "application/json": components["schemas"]["RelayPaginationResponse"];
        };
      };
    };
  };
  "Bulk Get Guilds": {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["GuildBulkInput"];
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          "application/json": components["schemas"]["GuildBulkResponse"];
        };
      };
    };
  };
  "Get Guild Status": {
    /** @description Determine if given guild name or ID exists. */
    responses: {
      /** @description Default Response */
      200: {
        content: {
          "application/json": components["schemas"]["PlayerStatusResponse"];
        };
      };
    };
  };
  "Get Leaderboard": {
    parameters: {
      query: {
        limit?: number;
        type: "crateKeys" | "credits" | "factions" | "game" | "guilds" | "kdr" | "kills" | "mapVotes" | "oldest" | "parkour" | "playtime" | "voters" | "wins" | "wlr" | "xp";
        column?: "bh_wins" | "bw_beds_broken" | "bw_doubles_beds_broken" | "bw_doubles_final_kills" | "bw_doubles_kills" | "bw_doubles_wins" | "bw_final_kills" | "bw_kills" | "bw_solo_beds_broken" | "bw_solo_final_kills" | "bw_solo_kills" | "bw_solo_wins" | "bw_squads_beds_broken" | "bw_squads_final_kills" | "bw_squads_kills" | "bw_squads_wins" | "bw_trios_beds_broken" | "bw_trios_final_kills" | "bw_trios_kills" | "bw_trios_wins" | "bw_wins" | "cq_flags_captured" | "cq_kills" | "cq_wins" | "duels_kills" | "duels_wins" | "kills" | "mm_bow_kills" | "mm_classic_kills" | "mm_classic_wins" | "mm_infection_kills" | "mm_infection_wins" | "mm_kills" | "mm_knife_kills" | "mm_throw_knife_kills" | "mm_wins" | "ms_wins" | "sc_wins" | "sg_kills" | "sg_wins" | "sw_doubles_insane_kills" | "sw_doubles_kills" | "sw_doubles_normal_kills" | "sw_doubles_wins" | "sw_kills" | "sw_solo_insane_kills" | "sw_solo_kills" | "sw_solo_normal_kills" | "sw_solo_wins" | "sw_wins" | "tb_kills" | "tb_wins" | "uhc_kills" | "uhc_wins" | "wins";
        scope?: "bestStreak" | "kills" | "streak";
        kdrPrefix?: "bw_doubles" | "bw" | "bw_solo" | "bw_squads" | "bw_trios" | "cq" | "duels" | "mm_classic" | "mm_infection" | "mm" | "sg" | "sw_doubles_insane" | "sw_doubles" | "sw_doubles_normal" | "sw" | "sw_solo_insane" | "sw_solo" | "sw_solo_normal" | "tb" | "uhc";
        wlrPrefix?: "duels" | "sw_doubles" | "sw_solo" | "sw" | "tb";
        period?: "global" | "daily" | "weekly" | "biweekly" | "monthly" | "yearly";
        gameMode?: "bh" | "bw" | "cq" | "duels" | "mm" | "ms" | "sc" | "sg" | "sw" | "tb" | "uhc";
        month?: "current" | "previous";
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          "application/json": components["schemas"]["LeaderboardResponse"];
        };
      };
    };
  };
  "Bulk Get Leaderboards": {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["LeaderboardBulkInput"];
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          "application/json": components["schemas"]["LeaderboardBulkResponse"];
        };
      };
    };
  };
  "Get Player": {
    parameters?: {
      query?: {
        expand?: boolean;
        withFactionData?: boolean;
        withGuildData?: boolean;
        withOnline?: boolean;
        withPunishments?: boolean;
        withSkinData?: boolean;
        withStats?: boolean;
        withVoteStatus?: boolean;
        withAvatarBlurhash?: boolean;
        period?: "global" | "daily" | "weekly" | "biweekly" | "monthly" | "yearly";
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          "application/json": components["schemas"]["PlayerResponse"];
        };
      };
    };
  };
  "Get Player Avatar": {
    parameters?: {
      query?: {
        dataOnly?: boolean;
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          "application/json": components["schemas"]["PlayerSkinResponseData"];
        };
      };
    };
  };
  "Get Player Count": {
    responses: {
      /** @description Default Response */
      200: {
        content: {
          "application/json": components["schemas"]["PlayerCountResponse"];
        };
      };
    };
  };
  "Get Player Leaderboard": {
    parameters?: {
      query?: {
        period?: "global" | "daily" | "weekly" | "biweekly" | "monthly" | "yearly";
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          "application/json": components["schemas"]["PlayerLeaderboardResponse"];
        };
      };
    };
  };
  "Bulk Get Player Leaderboards": {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PlayerLeaderboardBulkInput"];
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          "application/json": components["schemas"]["PlayerLeaderboardBulkResponse"];
        };
      };
    };
  };
  "Get Player Punishments": {
    responses: {
      /** @description Default Response */
      200: {
        content: {
          "application/json": components["schemas"]["PlayerPunishmentsResponse"];
        };
      };
    };
  };
  "Get Players": {
    parameters?: {
      query?: {
        withStats?: boolean;
        first?: number;
        after?: string;
        last?: number;
        before?: string;
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          "application/json": components["schemas"]["RelayPaginationResponse"];
        };
      };
    };
  };
  "Bulk Get Players": {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PlayerBulkInput"];
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          "application/json": components["schemas"]["PlayerBulkResponse"];
        };
      };
    };
  };
  "Get Player Skin": {
    parameters?: {
      query?: {
        dataOnly?: boolean;
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          "application/json": components["schemas"]["PlayerSkinResponseData"];
        };
      };
    };
  };
  "Get Player Stats History": {
    /** @description Track hourly stats for a player (lazy-loaded). Max 100 new players every 24 hours for each API key. */
    parameters: {
      query: {
        version?: 1;
        periodStart: number;
        periodEnd?: number | -1;
        hour?: number;
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          "application/json": components["schemas"]["PlayerStatsResponse"];
        };
      };
    };
  };
  "Bulk Get Player Stats History": {
    /** @description Track hourly stats for a player (lazy-loaded). Max 100 new players every 24 hours for each API key. */
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PlayerStatsInput"];
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          "application/json": components["schemas"]["PlayerStatsResponseBulk"];
        };
      };
    };
  };
  "Get Player Stats by Type": {
    responses: {
      /** @description Default Response */
      200: {
        content: {
          "application/json": components["schemas"]["PlayerStatsByTypeResponse"];
        };
      };
    };
  };
  "Get Player Status": {
    /** @description Determine if given XUID or username exists. */
    responses: {
      /** @description Default Response */
      200: {
        content: {
          "application/json": components["schemas"]["PlayerStatusResponse"];
        };
      };
    };
  };
  "Get Search Results": {
    parameters: {
      query: {
        name: string;
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          "application/json": components["schemas"]["SearchResponse"];
        };
      };
    };
  };
  "Get Full-Text Search Results": {
    parameters: {
      query: {
        expand?: boolean;
        withFactionData?: boolean;
        withGuildData?: boolean;
        withOnline?: boolean;
        withPunishments?: boolean;
        withSkinData?: boolean;
        withStats?: boolean;
        withVoteStatus?: boolean;
        withAvatarBlurhash?: boolean;
        period?: "global" | "daily" | "weekly" | "biweekly" | "monthly" | "yearly";
        limit?: number;
        query: string;
        type?: "faction" | "guild" | "player";
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          "application/json": components["schemas"]["SearchFullTextResponse"];
        };
      };
    };
  };
  "Get Server Metadata": {
    responses: {
      /** @description Default Response */
      200: {
        content: {
          "application/json": components["schemas"]["ServerMetaResponse"];
        };
      };
    };
  };
  "Get Server MOTDs": {
    responses: {
      /** @description Default Response */
      200: {
        content: {
          "application/json": components["schemas"]["ServerSettingsResponse"];
        };
      };
    };
  };
  "Get Server Ping": {
    parameters?: {
      query?: {
        ip?: string;
        port?: number;
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          "application/json": components["schemas"]["ServerPingResponse"];
        };
      };
    };
  };
  "Get Servers": {
    responses: {
      /** @description Default Response */
      200: {
        content: {
          "application/json": components["schemas"]["ServerResponse"];
        };
      };
    };
  };
  "Get Stream Status": {
    responses: {
      /** @description Default Response */
      200: {
        content: {
          "application/json": components["schemas"]["StreamResponse"];
        };
      };
    };
  };
  "Get Updates": {
    parameters?: {
      query?: {
        before?: number;
        after?: number;
        limit?: number;
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          "application/json": components["schemas"]["UpdatesResponse"];
        };
      };
    };
  };
  "Get XUID Mapping": {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["XuidMappingInput"];
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          "application/json": components["schemas"]["XuidMappingResponse"];
        };
      };
    };
  };
}
